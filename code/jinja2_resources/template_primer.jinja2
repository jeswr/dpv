{% from 'macro_dpv_document_family.jinja2' import dpv_document_family, sotd, funding_acknowledgements %}
{% from 'macro_example.jinja2' import example_aside %}
<!DOCTYPE html>
<html>
<head>
  <title>Primer</title>
  <meta http-equiv='Content-Type' content='text/html;charset=utf-8' />
  <script src="https://www.w3.org/Tools/respec/respec-w3c" class="remove" defer></script>
  <script type="text/javascript" class="remove">
  var respecConfig = {
    title: "Primer",
    subtitle: "Data Privacy Vocabulary (DPV)",
    shortName: "primer",
    specStatus: "CG-FINAL",
    group: "dpvcg",
    latestVersion: "https://w3id.org/dpv/primer",
    canonicalUri: "https://w3id.org/dpv/primer",
    edDraftURI: "https://dev.dpvcg.org/primer",
    publishDate: "2024-07-01",
    // isPreview: true,
    subjectPrefix: "[primer]",
    doJsonLd: true,
    maxToclevel: 3,
    github: "w3c/dpv",
    editors: [{
      name: "Harshvardhan J. Pandit",
      url: "https://harshp.com/",
      "company": "{{ "Harshvardhan J. Pandit" | generate_author_affiliation }}"
    }],
    authors: [{
      name: "Harshvardhan J. Pandit",
      url: "https://harshp.com/",
      "company": "{{ "Harshvardhan J. Pandit" | generate_author_affiliation }}"
    }, {
      name: "Georg P. Krog",
      url: "https://www.linkedin.com/in/georg-philip-krog-a2a278104/",
      "company": "{{ "Georg P. Krog" | generate_author_affiliation }}"
    }, {
      name: "Beatriz Esteves",
      url: "https://besteves4.github.io/",
      "company": "{{ "Beatriz Esteves" | generate_author_affiliation }}"
    }],
    otherLinks: [
      {
        "key": "Previous Release",
        "data": [
            {
              "value": "Primer for DPV v1 (2022)",
              "href": "https://www.w3.org/community/reports/dpvcg/CG-FINAL-primer-20221205/"
            }
        ]
      },
      {
        "key": "Key Publications",
        "data": [
            {
              "value": "Data Privacy Vocabulary (DPV) -- Version 2 (2024)",
              "href": "https://arxiv.org/abs/2404.13426"
            },
            {
              "value": "Creating a Vocabulary for Data Privacy (2019)",
              "href": "https://doi.org/10.1007/978-3-030-33246-4_44"
            }
        ]
      }
    ],
    localBiblio: {%  include 'references.json' %}
  };
  </script>
  <link rel="stylesheet" type="text/css" href="../media/common.css">
</head>

<body>
  <section id="abstract">
    <p>The Data Privacy Vocabulary [[DPV]] enables expressing machine-readable metadata about the processing of personal data and use of technologies such as AI. It provides representation of information to support regulatory compliance, such as that for [[[GDPR]]]. This document is the ‘<i>Primer</i>’ for DPV - and introduces fundamental concepts with examples of use-cases and applications as a starting point for adopters wanting to understand and use the DPV. The Primer contains:</p>
    <ul>
      <li>A high-level conceptual explanation of the DPV and its modelling of concepts;</li>
      <li>Self-contained examples that illustrate how the concepts and data models provided by DPV can represent information associated with processing of personal data and use of technologies; and</li>
      <li>Guidance towards application of DPV in use-cases and technologies.</li>
    </ul>
    <p>[[PRIMER-concise]] is a shorter version (2 pages) of the primer intended for a quick introduction.</p>
    {{ sotd() }}
    {{ dpv_document_family(document='primer') }}
  </section>
  <section id="introduction">
    <h2>Introduction</h2>
    <p>The <a href="https://www.w3.org/community/dpvcg/">[[[DPVCG]]]</a> was formed in 2018 through the <a href="https://www.specialprivacy.eu/">[[[SPECIAL]]]</a> with the ambition of providing a machine-readable and interoperable vocabulary for representing information about the use and processing of personal data, whilst inviting perspectives and contributions from a diverse set of stakeholders across computer science, IT, law, sociology, philosophy – representing academia, industry, policy-makers, and activists. It identified the following issues through the <a href="https://www.w3.org/2018/vocabws/report">W3C Workshop on Privacy and Linked Data</a>:
      <ol type="a">
        <li>lack of standardised vocabularies to represent concepts related to personal data, and who/how/where it is processed;</li>
        <li>lack of descriptive taxonomies that describe how purposes of processing personal data which are not restricted to a particular domain or use-case; and</li>
        <li>lack of machine-readable representations of concepts that can be used for technical interoperability of information.</li>
      </ol>
    </p>
    <p>The outcome of addressing these resulted in the creation of the <a href="https://w3id.org/dpv">[[[DPV]]]</a>, which provides a vocabulary and ontology for expressing information related to processing of personal data, entities involved and their roles, details of technologies utilised, relation to laws and legal justifications permitting its use, and other relevant concepts based on privacy and data protection. While it uses the EU’s [[[GDPR]]] as a guiding source for the creation and interpretation of concepts, the ambition and scope of DPV is to provide a broad globally useful vocabulary that can be extended to jurisdiction or domain specific applications.</p>
    <p>People, organisations, laws, and use-cases have different perspectives and interpretations of concepts and requirements which cannot be modelled into a single coherent universal vocabulary. The aim of DPV is to provide a foundational framework of ‘<i>common concepts</i>’ that can be extended to represent specific laws, domains, or applications. This lets any two entities agree that a term, for example, <a href="https://w3id.org/dpv#PersonalData"><code>PersonalData</code></a>, refers to the same semantic concept, even though they might apply it differently within their own use-cases.</p>
    <p>While most of DPV is focused on processing of personal data, it also supports representing uses of non-personal data and representing technologies such as cloud services and AI. Through these concepts, DPV enables supporting regulations and use-cases which affect use of both personal and non-personal data - such as the [[[DGA]]], and regulations which regulate technologies such as [[[NIS2]]] and [[[AIAct]]].
  </section>
  <section id="using-dpv">
    <h2>Using DPV</h2>
    <p>The motivation of DPV is to provide a '<i>data model</i>' or an '<i>ontology</i>' of concepts for interoperable representation and exchange of information about processing of (personal) data and the use of technologies. For this, the DPV specification defines concepts and relationships using the [[RDF]] standard, and which can additionally be implemented and applied using technologies appropriate to a use-case's specific requirements.</p>
    <section id="serialisations">
    <h3>DPV Serialisations</h3>
    <p>In addition to being used as a semantic web resource, the DPV can also be used without (or alongside) semantic web by utilising a format such as [[JSON-LD]] that retains the semantics and provides convenience of using JSON, or through other formats such as a CSV or a flat-list of concepts which do not capture 'semantics'. This section provides an overview of such approaches where DPV can be used both with and without semantic web.</p>
    <p>The following are four (non-exhaustive) ways DPV can be used based on the requirements of an use-case. For guidance on how to adopt DPV concepts within an use-case, refer to [[[GUIDES]]].</p>
    <ol>
    <li>As a <b>taxonomy or collection of concepts</b>: The [[DPV]] specification provides taxonomies of concepts (e.g. <code>Purpose</code>). This is useful where only the 'taxonomy' in DPV is needed, for example to populate forms or annotate information. For this, the default serialisation of [[SKOS]] is useful, or implementers can utilise other formats such as CSVs or JSON while retaining the IRIs for interoperability.</li>
    <li>As a <b>'schema' or 'lightweight-ontology'</b>: The [[DPV]] uses [[RDFS]] and [[SKOS]] as its default serialisation to define 'classes' and 'properties' as well as 'taxonomies' that can be used with it (e.g. <code>hasPurpose</code> and instances of <code>Purpose</code> taxonomy). The classes and properties form a 'data model' or 'schema' to represent how information should be structured and organised, and do not contain any complex restrictions (e.g. unions and intersections of concepts). It is suitable for cases where the use-case wants to use DPV as a schema or data model or to describe its activities, and where creating constraints, inferences, or reasoning is either implemented separately (e.g. SWRL or SHACL) or is not required.</li>
    <li>As an <b>'logic-based ontology'</b>: The [[DPV-OWL]] is a serialisation of the [[DPV]] specification using [[OWL]] language that contains the same concepts but is provided under a separate namespace. It enables the use of description logic in [[OWL]] for modelling knowledge and describing desired inferences through a logic-based reasoner. OWL offers more powerful (and complex) features compared to RDFS+SKOS regarding expression of information and its use to produce desired inferences in a coherent manner. It also restricts ways in which DPV concepts can be used - see <a href="#example-implications-of-using-skos-vs-owl">example showing implications of using SKOS vs OWL</a>. Also see the [[[GUIDE-OWL2]]].</li>
    <li><b>Other Uses</b>: For cases where the above are not suitable or sufficient, an adopter can create their own serialisation of the DPV by implementing the [[DPV]] specification in RDF (or other semantics-aware languages) or for alternate formats and environments such as CSVs, programming APIs, and frameworks. When using DPV in such a manner, it is advised to retain compatibility (and interoperability) by either using the entire IRI (e.g. <a href="https://w3id.org/dpv#Purpose">https://w3id.org/dpv#Purpose</a>) or providing documentation for how the custom implementation aligns with the [[DPV]] specification (e.g. stating <em>MyPurposeConcept</em> is the same as <code>dpv:Purpose</code>). Doing this ensures that the data remains compatible and interoperable with the other uses and applications of DPV.</li>
  </ol>
</section>
    <section id="areas-application">
    <h3>Areas of Application</h3>
    <p>The following is an illustrative, but non-exhaustive list of applications possible with the DPV:</p>
    <p class="note">See the community maintained <a href="https://github.com/w3c/dpv/wiki/Adoption-and-Uses-of-DPVCG">[[[DPV-ADOPTION]]]</a></p>
    <ul>
      <li><b>Document annotation</b> - identifying and annotating concepts within documents such as privacy policies, legal compliance documentation, web pages;</li>
      </li>
      <li><b>Representing Policies</b> – expressing policies for how personal data should be ‘handled’, policies for describing an use-cases’ use of personal data such as those required for representing consent, contracts, and data sharing agreements;
      </li>
      <li><b>Representing Rules</b> – creating and utilising rules for expressing requirements, constraints, or obligations regarding the necessity or optionality on the use of personal data, and for checking conformance with obligations such as for legal compliance.
      </li>
    </ul>
  </section>
</section>

<section id="semantics-of-dpv">
    <h2>Semantics of DPV</h2>
    <p>DPV defines a broad notion of semantics for providing a <i>conceptual</i> model of concepts and relationships between them. As explained in the [[[#serialisations]]] section, [[DPV]] provides concepts which are represented using [[RDFS]] and [[SKOS]] which permits its use as a taxonomy or as a light-weight ontology. In addition to this, the same concepts are provided with [[OWL]] serialisation in a separate namespace to enable complex ontological reasoning. The following section introduces why we need 'concepts' and 'relationships' and how they are modelled in DPV.</p>
    <section id="concepts-relationships">
      <h3>Concepts and Relationships</h3>
      <p>[[DPV]] is a collection of <i>concepts</i>. Here the term 'concept' is broadly used as consisting of a <i>term</i> non-exhaustively representing any of the following: idea, thought, meaning, object, event, relations, class, or category. Thus, in DPV, 'concepts' consist of terms and relationships between them.</p>
      <figure>
        <img src="../media/concepts_relations.png"/>
        <figcaption>Concepts and Relationships</figcaption>
      </figure>
      <aside class="example">
        <p>Consider the example scenario where we want to express the following: Alpha is a <i>DataController</i> that <i>collects</i> <i>Email</i> as <i>PersonalData</i>, <i>stores</i> it, and <i>shares</i> it with BetaInc (a <i>Data Processor</i>), all for <i> official correspondence</i>.</p>
        <p>In this, the 'core' concepts are: <code>Data Controller</code>, <code>Personal Data</code>, <code>Processing</code>, <code>Data Processor</code>, and <code>Purpose</code>. Email is another concept that is a specific 'type' or 'subset' or 'category' of Personal Data. Similarly, Processing has 'collects', 'stores', and 'shares'. Alpha is a specific 'instance' of a Data Controller, and similarly BetaInc of a Data Processor.</p>
        <p>Here the difference between 'Email' and 'Alpha' is that the former could be further described in terms of the same concept, e.g. Email Address is a specific part of Email as Personal Data; while the latter is 'final' in the sense that it cannot be 'extended' further without losing its meaning. For example, if 'Alpha' has a department or subsidiary, then either of those are not a 'Data Controller' automatically.</p>
        <p>In addition to concepts, the above example also requires expressing these <i>relationships</i>: (i) a concept is a 'subtype' or 'subset' of another concept; (ii) a concept is an 'instance' of another concept; (iii) indicating a concept is applicable or involved. These relationships are expressed as <i>is subtype of</i>, <i>is instance of</i>, and <i>has concept</i> respectively.</p>
        <p>Combining all of these together, we say the following in DPV:</p>
        <ul>
          <li>PersonalData, Purpose, Processing, Data Controller, Data Processor are instances of Concept</li>
          <li>Email is a subtype of Personal Data. Collect, Store, and Share are subtypes of Processing. Official Correspondence is a subtype of Purpose.</li>
          <li>Alpha is an instance of a Data Controller. BetaInc is an instance of a Data Processor.</li>
          <li>The use-case "<code>has personal data := Email</code>"; "<code>has processing := Collect, Store, Share</code>" ; and so on...</li>
          <li><code>has personal data</code> is a relation linking to <code>Personal Data</code>, <code>has processing</code> is a relation linking to a <code>Processing</code>, and so on ...</li>
        </ul>
      </aside>
      
      <p>A ‘concept' in DPV is a 'term' representing information associated with that particular concept. For example, the concept <code>Email</code> refers to information about <em>emails</em>. This information may contain <i>email addresses, aliases, signatures</i>, and so on. While an intuitive use of <code>Email</code> may be taken to only refer to <i>email address</i>, within DPV concepts are defined with a strict scope as being representatives of all concepts that are inherently a part of it. Therefore, for emails, the concept <code>Email</code> is inclusive of email addresses, aliases, and so on from above. To specifically refer to 'email address', the concept <code>Email Address</code> should be used, which is 'narrower' or 'more specific' than the concept <code>Email</code>, or in terms of sets <code>EmailAddress</code> is a subset of <code>Email</code>, or if representing information as 'classes' we say <code>EmailAddress</code> is a 'subclass' of <code>Email</code> in terms of information. We use the term 'subtype' to indicate all such relationships consisting of 'broader/narrower' or 'superclass/subclass' or 'subset/superset' to enable different semantic interpretations when serialising the concepts using standards such as [[RDFS]], [[SKOS]], and [[OWL]] (e.g. 'is-a' or 'subclass'). </p>
      <p>Through this interpretation, the DPV is structured as a hierarchy of concepts where each <i>parent or top or broader concept</i> represents a broad set of information and its <i>children or bottom or narrower concepts</i> represent parts of that set. For example, the top concept <code>Data</code> has more specific subtypes <code>Personal Data</code> - which has a further subtype <code>Sensitive Data</code>.</p>
    
    <aside class="note" title="Caution against ambiguous interpretation of terms in practice">
      <p>In the real-world, concepts are not used with the formal and logical consistency expected. Instead, general concepts are used to represent its entire category, which is also why DPV concepts are structured in a top-down fashion. To better reflect a use-case and to ensure accuracy of interpretation when using DPV, it is strongly recommended to either choose concepts which are as detailed or closer to the actual intended usage of that concept, and/or to find a suitable concept and extend it to reflect the specifics as accurately as possible.</p>
    </aside>
    <p>In taking this view of concepts and relationships, DPV provides a way to agree upon what a <i>term</i> means and is intended to represent. For example, when two different use-cases use the concept <i>Personal Data</i> using DPV, both refer to the <i>same concept</i>. Similarly, when Email is declared as a subtype of Personal Data, another entity receiving and reading this information must interpret it in the same manner. DPV is thus intended to be a foundational model for terms and relationships when representing and exchanging information.</p>
    </section>
    <section id="classes-hierarchies-and-instances">
    <h3>DPV as an Ontology</h3>
    <p>The use of DPV concepts in actual use-cases is often accompanied with additional information and a specific 'serialisation' that make it possible to use DPV in a given technological or theoretical framework. For example, consider the relation <code>hasPersonalData</code> used to indicate association or applicability of <code>PersonalData</code> subtypes/subclasses or instances. While this information about what concepts the relationship is being used with/for can be implicitly understood by humans based on the phrasing 'has personal data', it can also be explicitly declared as machine-readable information so as to: (i) express the inherent logic and interpretation of which concepts are related; (ii) enable verification that the object of relation is indeed a type of personal data; and (iii) provide hints or suggestions such as a list of personal data concepts in GUI when using the relation. To express such additional information that defines relations between concepts and constraints their uses, DPV must be specified as an 'ontology' using a serialisation that supports representing this and any other required information.</p>
    <p>One option to represent ontologies is RDF ([[[RDF]]]) which provides a formal method for expressing information or facts, with RDFS ([[[RDFS]]]), SKOS ([[[SKOS]]]), and OWL ([[[OWL]]]) for representing a more detailed and logic-based assertion of the model in terms of relationships and restrictions. While there are other alternatives available to RDF for representing information, and to RDFS, SKOS, and OWL for representing taxonomies and ontologies, the DPVCG uses these to serialise the DPV specification as an ontology based on their status as standards.</p>
    <p>Initially, DPV was only provided as an [[OWL]] ontology. This was expanded upon in DPV v1 which used custom [[SKOS]] extensions to define the 'core' vocabulary with serialisations in [[RDFS]]+[[SKOS]] and OWL2. In DPV v2, the custom [[SKOS]] extensions were removed in favour of [[RDFS]]+[[SKOS]] as the default serialisation with [[OWL]] as an alternative serialisation. The [[RDFS]]+[[SKOS]] serialisation defines concepts as [[RDFS]] classes and instances of a top-concept with [[SKOS]] used to represent the hierarchy, whereas the [[OWL]] serialisation uses subclasses to represent the hierarchy.</p>
    <p>The table provides an overview of the expression of concepts across DPV serialisations.</p>
    <table>
      <thead>
        <th>Concept</th>
        <th>[[DPV]]</th>
        <th>[[DPV-OWL]]</th>
      </thead>
      <tbody>
        <tr>
          <td>Conforms with</td>
          <td>[[RDFS]], [[SKOS]]</td>
          <td>[[OWL]]</td>
        </tr>
        </tr>
        <tr>
          <td>Concept</td>
          </td><td><code>rdfs:Class, skos:Concept</code></td>
          <td><code>owl:Class</code></td>
        </tr>
        <tr>
          <td>is subtype of</td>
          </td><td><code>rdfs:subClassOf or skos:broader</code></td>
          <td><code>owl:subClassOf</code></td>
        </tr>
        <tr>
          <td>is instance of</td>
          </td><td><code>rdf:type</code></td>
          <td><code>rdf:type</code></td>
        </tr>
        <tr>
          <td>has concept</td>
          </td><td><code>rdf:Property</code></td>
          <td><code>owl:ObjectProperty</code></td>
        </tr>
        <tr>
          <td>relationship subject or domain</td>
          </td><td><code>rdfs:domain, dcam:domainIncludes, schema:domainIncludes</code></td>
          </td><td><code>rdfs:domain, dcam:domainIncludes, schema:domainIncludes</code></td>
        </tr>
        <tr>
          <td>relationship object or range</td>
          </td><td><code>rdfs:range, dcam:rangeIncludes, schema:rangeIncludes</code></td>
          </td><td><code>rdfs:range, dcam:rangeIncludes, schema:rangeIncludes</code></td>
        </tr>
      </tbody>
    </table>
    {{ example_aside('dex:E0001') }}

  </section>
  <section id="using-dpv-in-use-cases">
    <h3>Extending Concepts for Use-Cases</h3>
    <p>Most of the concepts within DPV are provided as hierarchies of classes representing categories of information, which are intentionally generic or abstract or broad so as to permit their application across a diverse and varied landscape of real-world use-cases. In order to accurately reflect the particulars of an use-case, concepts within DPV would (most likely) need to be extended. The specifics for how this should be done depend on the manner in which DPV is utilised. For example, using the default [[DPV]] specification which contains [[RDFS]] and [[SKOS]] semantics, extending is done by declaring a new concept an instance of the top concept using <code>rdf:type</code> and then using <code>skos:broader</code> to denote where it fits within the hierarchy. In [[DPV-OWL]] which uses [[OWL]] semantics, <code>rdfs:subClassOf</code> relationship is used to create hierarchy of sub-classes. Where an exact concept is not present within the DPV and a broader concept exists for representing the same information - one should subtype or extend that broad concept to define the required information.</p>
    {{ example_aside('dex:E0002') }}

    <p>The mechanism for extending concepts (via both subclasses/subtypes and instances) is useful to align existing concepts or vocabularies with the DPV taxonomies, such as by declaring them as subclasses of a particular concept. This permits the creation of domain or jurisdiction specific <i>extensions</i>, such as [[[EU-GDPR]]] for expressing the legal bases provided by GDPR. Extensions also permit more accurate representations of a use-case by extending from multiple concepts to refine and scope the interpretation. This means each concept can have multiple parents representing the intersection of their respective sets.</p>
    {{ example_aside('dex:E0003') }}
<!-- TODO: order of operations description and examples -->

    <div class="note" title="Clarity on combining, extending, and instantiating concepts">
    <p>It is not necessary to extend concepts unless one wishes to depict use-case specific information. For example, if in a use-case it is sufficient to (only) say some information is collected, then <code>dpv:Collect</code> can be directly used. However, where more specific information is needed, such as also specifying a method of collection (e.g. <code>CollectViaWebForm</code>), then it is recommended to extend the concept, for example as <code>&lt;CollectViaWebForm a dpv:Collect&gt;</code>. If there are lots of forms and they need to be 'grouped' together as collection methods, then one would subtype/subclass <code>Collect</code> as <code>CollectViaWebForm</code> and create instances of it for each form to be represented.</p>
    <p>Though this example used a web form as a method of collection by directly mentioning it within the concept as <code>CollectViaWebForm</code>, this may not always be desirable. For example, that same web form may also need to be represented separately for logging purposes. DPV also provides the <code>DataSource</code> and <code>Technology</code> concepts for representing information regarding how concepts are implemented and the use of specific technological artefacts such as web forms, databases, along with their functions such as data storage and retrieval.</p>
  </div>
  </section>

  <section id="interoperability-of-concepts">
    <h3>Maintaining Interoperability</h3>
    <p>DPV intends to provide a core or foundational framework for different entities to exchange information and interpret concepts for interoperability. When an adopter (e.g. an organisation using DPV) extends concepts to refine them for their own use-case, the concept is still (weakly) interoperable by relying on DPV’s broad taxonomies to provide a common point of reference.</p>
    {{ example_aside('dex:E0004') }}
  </section>
</section>

  <section id="core-concepts">
    <h2>Core Concepts</h2>
    <section id="core-taxonomy">
      <h3>Structure of DPV</h3>
      <figure>
        <img src="../media/dpv_packages.png" style="width: 100%; height: auto" />
        <figcaption>DPV (depicted as core) vocabulary providing taxonomies of concepts such as data and purpose, and with extensions further extending concepts such as for risk and technologies (tech)</figcaption>
      </figure>
    <p>DPV provides hierarchical taxonomies of concepts where each <code>core concept</code> represents the top-most abstract concept in a tree and each of its children provide a lesser abstract or more concrete concept. For example, consider the concept of <a href="https://w3id.org/dpv#PersonalData"><code>PersonalData</code></a> which is the abstract representation of <em>personal data</em>. It can be further <i>refined</i> or <i>extended</i> as <code>SensitivePersonalData</code>, and further as <code>SpecialCategoryPersonalData</code> and then as <code>GeneticData</code> and so on.</p>
    <p>From this perspective, the top-most abstract concepts are collectively referred to as the <i>core vocabulary</i> within DPV. The goal of the DPV is to provide a rich collection of concepts for each of the top concepts so as to enable their application within real-world use-cases. The identification of what constitutes a core concept is based on the need to represent information about it in a modular and independent form, such as that required for legal compliance.</p>
    <p>Each core concept is intended to be independent from other core concepts. For example, the <a href="https://w3id.org/dpv#Purpose"><code>Purpose</code></a> (e.g. <a href="https://w3id.org/dpv">Optimisation</a>) refers only to the <i>purpose of why personal data is processed</i> and is independent as a concept from the <a href="https://w3id.org/dpv#PersonalData"><code>PersonalData</code></a> (e.g. <a href="https://w3id.org/dpv/pd#Location"><code>Location</code></a>) or the <a href="https://w3id.org/dpv#Processing"><code>Processing</code></a> activities (e.g. <a href="https://w3id.org/dpv#Collect"><code>Collect</code></a>, <a href="https://w3id.org/dpv#Store"><code>Store</code></a>) involved to carry out that purpose. Such separation is necessary in order to represent and answer questions such as:</p>
    <ul>
      <li><i>Q:</i> What data is being processed? <br/><i>Ans:</i> <code>dpv:PersonalData</code> → <code>dpv:Email</code></li>
      <li><i>Q:</i> Why is the data being processed? <br/><i>Ans:</i> <code>dpv:Purpose</code> → <code>dpv:Marketing</code></li>
      <li><i>Q:</i> What operations are done with the data? <br/><i>Ans:</i> <code>dpv:Processing</code> → <code>dpv:Collect</code>, <code>dpv:Store</code></li>
      <li><i>Q:</i> What justification is used to do the processing? <br/><i>Ans:</i> <code>dpv:LegalBasis</code> → <code>dpv:Consent</code>, <code>dpv:Contract</code></li>
      <li><i>Q:</i> How is the data directly or indirectly being protected? <br/><i>Ans:</i> <code>dpv:TechnicalOrganisationalMeasure</code> → <code>dpv:AccessControlMethod</code>, <code>dpv:PrivacyByDesign</code></li>
      <li><i>Q:</i> What rights are associated with the processing of data? <br/><i>Ans:</i> <code>dpv:Right</code> → <code>dpv:ActiveRight</code>, <code>dpv:PassiveRight</code></li>  
      <li><i>Q:</i> What are the risks associated with processing of data? <br/><i>Ans:</i> <code>dpv:Risk</code> → <code>dpv:RiskLevel</code>, <code>dpv:Severity</code></li>
      <li><i>Q:</i> What is the contextual information associated with processing? <br/><i>Ans:</i> <code>dpv:Context</code> → <code>dpv:Duration</code>, <code>dpv:Scale</code></li>
      
    </ul>
    <p>The separation of concepts creates a <i>modular</i> structure for concept hierarchies within DPV, which in turn allows an adopter to use one particular concept taxonomy or module (e.g. list of purposes) independently without reusing the others, or to select only those concepts which are needed for their particular use-case. The separation also permits greater flexibility of representation and usage - such as using different combinations of core concepts as needed in use-cases. For example, a use-case can specify a single concept representing both Purpose and Processing by combining their respective concepts from DPV. The modular design of DPV also makes it possible to define domain and jurisdiction specific concepts in a separate namespace - such as the [[[DPV-NACE]]] purpose taxonomy</u></a> providing a way for <code>Purpose</code> to indicate sectors using NACE taxonomy, and the [[[EU-GDPR]]] for using <code>LegalBasis</code> to represent the legal bases provided by [[GDPR]].</p>
  </section>
  <section id="core-concepts-overview">
    <h3>Overview of Core Concepts</h3>
    <figure>
      <img src="../media/dpv_core.png">
      <figcaption>Overview of concepts in DPV - those in red have been added in v2, those in blue have had their scope expanded to include data and technologies</figcaption>
    </figure>

    <section class="notoc"><h4>Purpose</h4>
    <figure>
        <img src="../media/overview_Purpose.png"/>
        <figcaption>Indicating applicable or relevant <code>Purpose</code></figcaption>
      </figure>
    <blockquote>
      <p>see more information: 
        <a href="#purpose">Primer</a> | 
        <a href="/dpv#vocab-purpose">DPV spec</a> 
      </p>
    </blockquote>
    <p>Representing the <em>purpose</em> for which personal data is processed, for e.g. ‘Personalisation’ as a broad category of purpose. Information about the purpose can be further specified by denoting information about its interpretation within a particular <code>Sector</code>, such as from standardised authoritative lists e.g. [[NACE]], to indicate domain-specific applications and interpretations, or to indicate applicability of sectorial laws.</p>
  </section>

    <section class="notoc"><h4>Data and Personal Data</h4>
    <figure>
        <img src="../media/overview_PD.png"/>
        <figcaption>Indicating applicable or relevant <code>PersonalData</code></figcaption>
      </figure>
    <blockquote>
      <p>see more information: 
        <a href="#personal-data">Primer</a> | 
        <a href="/dpv#vocab-personal-data">DPV spec</a>
      </p>
    </blockquote>
    <p>‘Personal data’ refers to data about a natural person. ‘Personal data’ is also commonly referred to as ‘personally identifiable information (PII)’. However the terms should not be interchangeably used as based on definitions (e.g. those in GDPR), ‘personal data’ can be interpreted as a broader term than PII, and where PII may refer <u>only</u> to information that can directly identify a person. DPV’s definition of personal data is based on the broadest possible definition (i.e. from GDPR) as it covers a wider range of information considered ‘personal data’. Personal data can be declared as a category, such as ‘<i>Email</i>’, or an instance, such as ‘<i>x@y.z</i>’.</p>
    <p>DPV defines the concept <code>Data</code> which has subtypes <code>NonPersonalData</code> and <code>PersonalData</code>, which are associated using the relation <code>hasData</code>. To specifically indicate involvement of personal data, DPV provides the relation <code>hasPersonalData</code>.</p></section>
    
    <section class="notoc"><h4>Processing</h4>
    <figure>
        <img src="../media/overview_Processing.png"/>
        <figcaption>Indicating applicable or relevant <code>Processing</code></figcaption>
      </figure>
    <blockquote>
      <p>see more information: 
        <a href="#processing-categories">Primer</a> | 
        <a href="/dpv#vocab-processing">DPV spec</a> 
      </p>
    </blockquote>
    <p>Representing <em>processing</em> as in the actions or operations over personal data, for e.g. collect, use, share, store. To indicate the origin or source of data, the concept <code>DataSource</code> along with relation <code>hasDataSource</code> is provided. For additional <i>contextual</i> information regarding operations or processing, such as whether it include humans or automation, the concept <code>ProcessingContext</code> is provided which can be associated using the relation <code>hasContext</code> (description of <code>Context</code> is provided later in the document). Examples of <i>ProcessingContext</i> include conditions such as profiling, automated decision making, human involvement.</p>
    </section>

    <section class="notoc"><h4>Processing and Storage Conditions</h4>
    <figure>
        <img src="../media/overview_Storage.png"/>
        <figcaption>Indicating applicable or relevant temporal and geo-spatial information</figcaption>
      </figure>
    <p>Indicating information about conditions or limitations associated with processing (including storage) of personal data - such as its location, duration, deletion (e.g. erasure mechanisms), or restoration (e.g. backup availability).</p>
    </section>

    <section class="notoc"><h4>Legal Basis</h4>
    <figure>
        <img src="../media/overview_LegalBasis.png"/>
        <figcaption>Indicating applicable or relevant <code>LegalBasis</code></figcaption>
      </figure>
    <blockquote>
      <p>see more information: 
        <a href="#legal-basis">Primer</a> | 
        <a href="/dpv#vocab-legal_basis">DPV spec</a> 
      </p>
    </blockquote>
    <p> A legal basis is a law or a clause in a law that justifies or permits the processing of personal data or use of technologies in the specified manner. It is a jurisdictional concept given the scoping of laws to specified countries or regions, as well as a domain-specific concept given the specific laws enacted scoped to particular domains. A law, such as the GDPR, that regulates the use of personal data requires that every processing of personal data must be justified with some legal basis to ensure it is lawful, and to further assess its correctness, accountability, and impact based on the obligations applicable. However, what is considered a legal basis varies greatly across cultures, domains, use-cases, and laws themselves. The aim of DPV is therefore to provide an upper-level abstract taxonomy of categories of legal bases, such as consent and contract, that can be customised and applied as needed.</p>
    </section>
    <section class="notoc"><h4>Entities</h4>
    <figure>
        <img src="../media/overview_Entities.png"/>
        <figcaption>Indicating applicable or relevant <code>Entities</code></figcaption>
      </figure>
    <blockquote>
      <p>see more information: 
        <a href="#legal-entities">Primer</a> | 
        <a href="/dpv#vocab-entities">DPV spec</a> 
      </p>
    </blockquote>
    <p>Representing the ‘entities’ or ‘actors’ involved in the processing of personal data. DPV provides a broad categorisation of entities based on their relevance in jurisprudence (i.e. legal roles) as well as categorisation in real-world (e.g. organisation types).</p>
    </section>
    <section class="notoc"><h4>Data Controller</h4>
    <figure>
        <img src="../media/overview_DataController.png"/>
        <figcaption>Indicating applicable or relevant <code>DataController</code></figcaption>
      </figure>
    <p>Representing the organisation(s) responsible for processing the personal data.</p>
    </section>
    <section class="notoc"><h4>DataSubject</h4>
    <figure>
        <img src="../media/overview_DataSubject.png"/>
        <figcaption>Indicating applicable or relevant <code>DataSubject</code></figcaption>
      </figure>
    <p>Representing the categories or groups (e.g. Users of a Service), or instances (e.g. Jane Doe) of individual(s) whose personal data is being processed.</p>
    </section>
    <section class="notoc"><h4>Recipient</h4>
    <figure>
        <img src="../media/overview_Recipient.png"/>
        <figcaption>Indicating applicable or relevant <code>Recipient</code></figcaption>
      </figure>
    <p>Represents the entities that receive personal data, e.g. when it is being collected, or transferred, or shared.</p>
    </section>
    <section class="notoc"><h4>Technical Organisational Measure</h4>
    <figure>
        <img src="../media/overview_TechnicalOrganisationalMeasure.png"/>
        <figcaption>Indicating applicable or relevant <code>TechnicalOrganisationalMeasure</code></figcaption>
      </figure>
    <blockquote>
      <p>see more information: 
        <a href="#technical-and-organisational-measures">Primer</a> | 
        <a href="/dpv#vocab-technical_organisational_measures">DPV spec</a> 
      </p>
    </blockquote>
    <p>DPV provides a taxonomy of technical and organisational measures for representing information about how the processing of personal data is technically and organisationally protected, safeguarded, secured, or otherwise managed. This is distinct from what technology is used for carrying out processing, and instead refers to what <i>measures</i> are in place (i.e. what the technology intends to provide in terms of features).</p>
    <p>Technical and Organisational measures consist of activities, processes, or procedures used in connection with ensuring data protection, carrying out processing in a secure manner, and complying with legal obligations. Such measures are required by regulations depending on the context of processing involving personal data. For example, GDPR (Article 32) states implementing appropriate measures by taking into account the state of the art, the costs of implementation and the nature, scope, context and purposes of processing, as well as risks, rights and freedoms.</p>
    </section>

    <section class="notoc"><h4>Location and Jurisdiction</h4>
    <figure>
        <img src="../media/overview_Location.png"/>
        <figcaption>Indicating applicable or relevant <code>Jurisdiction</code></figcaption>
      </figure>
    <blockquote>
      <p>see more information: 
        <a href="#location-and-jurisdiction">Primer</a> | 
        <a href="/dpv#vocab-jurisdiction">DPV spec</a> 
      </p>
    </blockquote>
    <p>Representing the locations associated with entities, processing, data, and other information that is important to consider jurisdictions and from that understand the applicability of laws, involvement of authorities, and discover rights.</p>
    </section>

    <section class="notoc"><h4>Risk</h4>
    <figure>
        <img src="../media/overview_Risk.png"/>
        <figcaption>Indicating applicable or relevant <code>Risk</code></figcaption>
      </figure>
    <blockquote>
      <p>see more information: 
        <a href="#risk-assessment">Primer</a> | 
        <a href="/dpv#vocab-risk">DPV spec</a> 
      </p>
    </blockquote>
    <p>Risk refers to potential negative events. DPV enables representing risk(s) associated with a concept, for e.g. risk of unauthorised data disclosure related to processing, technical measure, or vulnerability of data subjects. In addition to the risk, DPV also enables representing the consequences (e.g. denial of service) and their impacts for specific entities (e.g. right violated for data subject).</p>
  </section>
  <section class="notoc"><h4>Technology</h4>
    <figure>
        <img src="../media/overview_Technology.png"/>
        <figcaption>Indicating applicable or relevant <code>Technology</code></figcaption>
      </figure>
    <p>Representing the technologies used to implement the processing, or associated with the processing. For example, software products, cloud services, or AI technologies. This also involves specifying who is doing the implementing i.e. a technology and its implementer.</p>
    </section>

    <section class="notoc"><h4>Rights</h4>
    <figure>
        <img src="../media/rights.png"/>
        <figcaption>Indicating applicable or relevant <code>Right</code></figcaption>
      </figure>
      <p>The concept <code>Right</code> represents a normative concept for what is permissible or necessary in accordance with a system such as laws. To associate rights with concepts that are relevant or within which those rights occur, the relation <code>hasRight</code> is used. Rights can be <i>passive</i>, which means they are always applicable without requiring anything to be done, or <i>active</i> where they require some action to be taken to initiate or exercise them. To represent these concepts, DPV uses <code>PassiveRight</code> and <code>ActiveRight</code> respectively. Rights can be applicable to different contexts or entities. To differentiate rights applicable or afforded to data subjects, the concept <code>DataSubjectRight</code> is used.</p>
    </section>

    <section class="notoc"><h4>Rules</h4>
      <p>Rules are relevant to explicitly denote how a system should implement operations, and enable associating specifics such as requirements, constraints, and other forms of 'rules' that are needed in order to control executions or affect interpretations or achieve compliance (e.g. with law). DPV defines the concept <code>Rule</code> and relation <code>hasRule</code> to enable representation of such conditions and requirements, and provides a minimal set of concepts for types of rules, namely - representing Permissions, Prohibitions, and Obligations. DPV does not define additional semantics for rules and limits its scope and focus to provide a simple way to specify common rules associated with personal data and its processing activities, with the recommendation to consider other richer and mature efforts dedicated to expression of conditions and rules, such as: [[ODRL]], [[SHACL]], and [[RuleML]].</p>
    </section>

  </section>
  <section id="process">
    <h3>Process</h3>
    <p>In legal terminology, it is common to refer to all information about how personal data is being processed using the colloquial term <i>processing</i>. This results in confusion between the use of <i>processing</i> as a concept referring to all information (i.e. purposes, personal data, collection, storage, etc.), and <code>processing</code> as a concept referring to (only) the specific actions or operations (e.g. collect, use).</p>
    <p>To avoid this ambiguity and enable clarity of information, DPV defines a new concept called <code>Process</code> for representing how the <a href="#core-concepts">core concepts</a> are combined and applied for a particular use-case. The association of a concept to <code>Process</code> is made using the relationships or properties provided for each concept. For example, to indicate a <code>Process</code> includes personal data, the relationship <code>hasPersonalData</code> is used along with the concept <code>PersonalData</code>.</p>
    <aside class="note" title="Process from DPV v2 is a replacement for PersonalDataHandling from DPV v1">
      <p>In DPV v1, the concept <code>PersonalDataHandling</code> was defined to represent the combination of core concepts. In DPV v2, this role is fulfilled by <code>Process</code> which is a term more closely aligned with practical uses and the vocabulary used by various entities e.g. business process. For backwards compatibility, <code>PersonalDataHandling</code> is defined as a subclass or subtype of <code>Process</code>.</p>
    </aside>
    {{ example_aside('dex:E0005') }}

<section class="notoc"><h4>Nesting <code>Process</code> to express granular models</h4>
    <p>Instances of <code>Process</code> can be nested, which means one instance can contain other instances, much like a box with several smaller boxes inside. This permits breaking down complex or dense use-cases into more granular ones and representing them in a more precise and modular fashion. Such a representation also facilitates reuse of the granular or modular processes, or in defining 'templates' and 'patterns', for example to craft a single process representing collecting and storing email addresses and using it in different processes for different purposes.</p>
    <p>From the earlier example, consider the situation where a single <code>Process</code> instance consists of two additional instances representing: (i) data is stored using a data processor, (ii) data is used for Marketing. While it is certainly possible to represent all of this information within one single instance of <code>Process</code>, the adopter may decide to create separate instances of <code>Process</code> based on requirements such as reflecting similar separations for legal documentation or accountability purposes.</p>
    {{ example_aside('dex:E0006') }}
</section>
<section class="notoc"><h4>Alternative Models</h4>
    <p><code>Process</code> is intended to provide a convenient concept for tying the core concepts together, and DPV does not make its use binding, nor does it constrain the relationships to only be defined between <code>Process</code> and the other core concepts. This is so as to permit using DPV in alternate or differing models. For example, where a central concept already exists, such as when describing relevant information for a smartphone app, the concept for <code>App</code> can be a replacement for <code>Process</code> based on statements such as <code>&lt;App&gt; hasPurpose &lt;SomePurpose&gt;</code>. Even in such cases, <code>Process</code> can provide granular expression thereby enabling description of different contexts within which the app uses personal data, such as for registration or complaint resolution. Therefore unless necessary for the use-case, DPV recommends using <code>Process</code> or its subtype/subclass as a central concept for ensuring interoperability.</p>
    <p>An example of where the adopter or use-case wants to use another concept in a way which is not compatible with <code>Purpose</code> is the use of <code>Purpose</code> to indicate it involves some data i.e. <code>&lt;SomePurpose hasPersonalData SomePersonalData&gt;</code>, or to indicate which legal basis is used for that purpose by using the <code>hasLegalBasis</code> relationship. While not explicitly prohibited by DPV, the implications of using <code>Purpose</code> in this manner is that the personal data and processing and other associated concepts are now strictly tied to the purpose instance (and implementation). Changing any of these would mean changing the purpose, and in addition to these, it is not possible to combine multiple purposes together or have nested purposes with different details in the same manner as with a <code>Process</code>. Therefore, DPVCG recommends the use of <code>Process</code> to ensure compatibility between use-cases as well as to ensure the use of concepts does not create ambiguity or restrict further use-cases from reusing existing information.</p>
    <!-- <p>The following figure indicates an alternate model which does not use <code>Process</code> as a central concept, but instead uses the core concepts and relationships to structure information related to a <i>Service</i>.</p>
    <figure>
      <img src="../media/alt_model_PDH.png">
      <figcaption>Alternate model to <code>Process</code> using core concepts and relationships</figcaption>
    </figure>
    <aside class="example" title="Alternative to Process: using Purpose to combine core concepts">
  <p>An example of how <code>Purpose</code> can be used to combine together the core concepts as an alternative style of modelling personal data processing without the use of <code>Process</code>. In this example, <code>Acme</code> is a <code>DataController</code> that <code>Collect</code>(s) and <code>Use</code>(s) <code>Email</code> for <code>ServiceProvision</code>. Note that the <code>pd:EmailAddress</code> is a concept from the [[[PD]]] extension.</p>
<pre class="nohighlight"><code>
ex:Acme rdf:type dpv:DataController .
ex:AcmeMarketing rdf:type dpv:Purpose ;
    skos:broader dpv:ServiceProvision ;
    dpv:hasDataController ex:Acme ;
    dpv:hasPersonalData pd:EmailAddress ;
    dpv:hasProcessing dpv:Collect, dpv:Use .
</code></pre>
</aside> -->
    <div class="note" title="Consequences of using a different model than Process">
    <p>When using custom-defined restrictions and data models, it is important to note the consequences such models have on interpretation and interoperability of data defined using DPV. For example, consider a compliance assessment tool that takes DPV data as input. If the tool expects a <code>Process</code> with links to relevant information, using other alternate models and relationships can produce invalid or incorrect results. To avoid this, we recommend:</p>
    <ol type="1">
      <li>
        <p>Documenting alternate models to clearly indicate their interpretation and use of DPV semantics;</p>
      </li>
      <li>
        <p>Where possible, ensuring and providing mappings between the alternate models and the <code>Process</code> or equivalent concepts within DPV so that the data can be transformed for interoperability;</p>
      </li>
      <li>
        <p>Consider contributing your idea or implementation of an alternate model to DPVCG to create a ‘library of models’, which can act as documentation for adopters and provide better understanding of the model's impacts on requirements and interpretation of information specified using DPV. This exercise can also assist in selecting a common model as the 'default' and to provide mechanisms for conversion/interoperability between it and other models.</p>
      </li>
    </ol>
  </div>
  </section>
</section>
</section>

  <section id="taxonomies-of-key-concepts">
    <h2>Taxonomies of Key Concepts</h2>
    <p>The following sections provide an overview of the taxonomies (i.e. hierarchies of concepts) provided by DPV for its core concepts.</p>
    <section id="purpose">
      <h3>Purpose</h3>
      <figure>
        <img src="../media/purpose-2.png" style="width:100%;height:auto;" /></p>
        <figcaption>Overview of top-level concepts in <code>Purpose</code> taxonomy</figcaption>
      </figure>
    <blockquote>
      <p>see <a href="/dpv#vocab-purpose">purpose section in DPV spec</a></p>
    </blockquote>
    <p>DPV’s taxonomy of purposes is used to represent the <em>reason</em> or <em>justification</em> for processing of personal data. For this, purposes are organised within DPV based on how they relate to the processing of personal data in terms of several factors, such as: management functions related to information (e.g. records, account, finance), fulfilment of objectives (e.g. delivery of goods), providing goods and services (e.g. service provision), intended benefits (e.g. optimisations for service provider or consumer), and legal compliance.</p>
    <div class="note" title="Purposes do not have a strict structure as used in real-world use-cases">
      <p>It is important to note the following for real-world implications of <code>Purpose</code>:</p>
    <ol type="1">
      <li>
        <p>There is no universal definition for what constitutes a ’purpose’ or what attributes are associated with it.</p>
      </li>
      <li>
        <p>There are several distinct ways to model purposes, e.g. as a ‘goal’ such as ‘Delivery of Ordered Goods’; or as a statement explaining the processing of personal data, e.g. ‘Sending newsletters to Email’.</p>
      </li>
      <li>
        <p>DPV does not define requirements for what is a ‘valid purpose’ as these are defined externally, e.g. in laws such as [[GDPR]] Article.5-1b where purposes are required to be ‘explicit and legitimate’.</p>
      </li>
      <li>
        <p>Purposes have contextual interpretations within their application and domains (i.e. depending on how they are used in an use-case). For example, <code>ServiceProvision</code> is interpreted differently across the use-cases of an online website, a goods delivery outlet, and a medical centre - even if they use the same terms or phrasing.</p>
      </li>
    </ol>
  </div>
    <p>Following from the above, practical uses of DPV will likely need to extend one of the concepts within DPV’s purpose taxonomy to ensure its purpose descriptions are specific and understandable within the context of that use-case. We therefore suggest, where possible and appropriate, to create a customised purpose as required within the use-cases by extending one or several purposes from the DPV taxonomy and to provide a human readable description to assist in its accurate interpretation (e.g. DPV prefers use of <code>skos:prefLabel</code> for its concepts and <code>dct:title</code> for other documentation).</p>
    {{ example_aside('dex:E0007') }}

    <h4 id="sector-of-purpose-application">Sector of Purpose Application</h4>
    <p>DPV provides <code>Sector</code> that can be used to indicate the relevant information to further clarify or indicate how a purpose should be interpreted. <code>Sector</code>, used with the <code>hasSector</code> relation, denotes the <i>sector</i> or <i>domain</i> of application, such as Manufacturing. This can be used alongside existing official sector taxonomies such as [[NACE]] (EU), [[NAICS]] (USA), or [[ISIC]] (UN), as well as commercial industry taxonomies such as [[GICS]] maintained by organisations MSCI and S&amp;P. Multiple classifications can be used through mappings between sector codes such as the [[[NACE-NAICS]]] provided by EU.</p>

    <div class="note" title="DPVCG provides a DPV-compatible NACE extension">
      <p>DPVCG provides an interpretation of the NACE revision 2 codes which uses <code>rdfs:subClassOf</code> to specify the hierarchy between sector concepts. It is available as [[DPV-NACE]]. The NACE codes within this extension have the namespace <code>nace</code> and are represented as <code>nace:NACE-CODE</code>.</p>
      <p>We are working on further alignments between the NACE codes and DPV's purpose taxonomy, and welcome contributions for the same.</p>
    </div>
    {{ example_aside('dex:E0008') }}

  <p>While the use of <code>Sector</code> for restricting (personal data processing) purposes is an uncommon and undocumented practice in terms of legal enforcement, we provide this feature as the use of sector code can assist with identification and interpretation of information as well as legal or organisational obligations and policies. For example, indicating some purpose is to be implemented within manufacturing or scientific research facilities (e.g. medical centres) can assist in ensuring specific types of access control and policies are defined and implemented.</p>


  </section>

  <section id="personal-data">
    <h3>Data &amp; Personal Data</h3>
    <figure>
      <img src="../media/PersonalData.png">
      <figcaption>Personal Data concepts within DPV and their extension in <code>dpv-pd</code></figcaption>
    </figure>
    <blockquote>
      <p>goto spec: 
        <a href="/dpv#vocab-personaldata">DPV spec</a> 
        <a href="/dpv-owl#vocab-personaldata">DPV-OWL</a>
      </p>
    </blockquote>
    <p>DPV provides the concept <a href="https://w3id.org/dpv#PersonalData"><code>PersonalData</code></a> and the relation <a href="https://w3id.org/dpv#hasPersonalData"><code>hasPersonalData</code></a> to indicate categories or instances of personal data that are being processed. [[DPV]] only provides a few concepts for describing personal data, e.g. as being sensitive. For additional specific categories of personal data as required within use-cases, the [[[PD]]] extension provides a rich taxonomy that extends the DPV's personal data taxonomy. This separation is to enable adopters to decide whether the extension's concepts are useful to them, or to use other external vocabularies, or define their own.</p>
    <div class="note" title="Clarity on Personal Data concepts being Categories and Instances">
      <p>Real-world and common usage of <i>personal data</i> is at both an abstract level as well as specific level. For example, consider the sentence "We use your Email information...", which uses "<i>Email</i>" to represent a reference to what personal data is involved. Here, one may interpret <i>Email</i> as representing only the <i>email address</i>, or as a broad set of possible information related to emails, such as <i>email address, email senders and recipients list, email service provider, email usage statistics</i> and so on.</p>
      <p>For ensuring clarity and resolving any potential ambiguity, DPV recommends being as specific as possible. This means where there is ambiguity as to what the information may be associated with or within a concept, it is advisable to resolve that ambiguity - either by choosing a more accurate concept from the taxonomy and/or by creating one through extension of an existing concept.</p>
    </div>
    <div class="note" title="Challenges in representing Personal Data concepts accurately">
      <p>In addition to above, it is also challenging to accurately represent how concepts function within real-world use in terms of their encapsulation within one another. For example, when establishing the DPV, we discussed the modelling of personal data categories based on the scenario where a picture of passport is initially collected, and from it various categories are extracted, such as - name, address, and photo. For representing this, merely stating the personal data as ‘passport photograph’ would not be entirely accurate as there is additional information within the photograph.</p>
      <p>A solution was established whereby the use-case is expected to declare explicitly what information it intends to collect or use with sufficient details and clarity. For the passport photograph scenario, the use-case would use the concept <code>PassportPhoto</code> as the data it collects, and indicate that it extracts or derives <code>Name</code> and <code>Age</code> from it. Or, it directly declares that it collects all three concepts. This is necessary to ensure the interpretation that using <code>PassportPhoto</code> means having access to and using all of its subsequent personal data categories.</p>
      <p>While this is one possible solution, other methods exist, such as explicitly declaring the data categories and their encapsulation within one another, such as by reusing <code>hasPersonalData</code> or creating additional properties (e.g. <code>containsData</code>) to indicate a personal data concept, i.e. the passport photo, <em>contains</em> information associated through the relation, i.e. name, age, etc. We welcome discussions regarding both these methods.</p>
    </div>
    <div class="note" title="PII and Sensitivity of Data">
      <p><i>PII</i> (Personally Identifiable Information) and <i>Sensitivity</i> of data are common concepts in relation to use of personal data. PII is a term with variable definitions depending on the particular interpretation of <i>personal</i> and <i>identifiable</i>. While ISO standards define PII as a concept closer to the <i>personal data</i> definition within DPV, this term can still result in confusion and ambiguity. DPV therefore defines <code>IdentifyingPersonalData</p> to explicitly denote that some data 'identifies' a person.</code>
      <p>DPV provides the <code>SensitivePersonalData</code> concept, and to indicate the degree of sensitivity, we recommend using the <code>SensitivityLevel</code> concept and associate it with <code>hasSensitivityLevel</code>.</p>
    </div>

    <section id="nonpersonal-synthetic-data">
      <h4>Non-Personal and Synthetic Data</h4>
      <p>While the focus of DPV is on <i>Personal Data</i>, there may be a need to represent <i>Non-Personal Data</i> within the same contextual use-cases. For example, if the personal data has been fully, completely, and irreversibly anonymised, then it can no longer be said to be personal data. To enable this, and other representations, DPV provides the concept <code>Data</code> to represent any data, with subtypes <code>PersonalData</code> and <code>NonPersonalData</code>. Using these as annotations can assist in clearly indicating which data should be protected, or protected with more severe measures, or to determine the scope of regulations which only apply over operations involving personal data.</p>
      <p><code>Data</code> is further subtyped as <code>SyntheticData</code> - a new concept that represents generated data intended to <i>mimic</i> personal data within a system so as to aid in development and testing without using actual or real personal data. Since such synthetic data may be used in systems that assume it is personal data, it has not been declared as a specific category of personal or non-personal data to permit its use as either.</p>
    </section>

    <section id="data-source-categorisation">
      <h4>Categorisation based on Source</h4>
      <p>The concept <code>DataSource</code> refers to information associated with processing contexts for indicating how the data is sourced or obtained. In some cases, it may be desirable to directly express this information over the data itself, such as indicating a dataset is "collected personal data", or that a storage policy only applies over "inferred data". To enable such uses, DPV provides the following subtypes of personal data: <code>CollectedPersonalData</code>, <code>DerivedPersonalData</code>, <code>InferredPersonalData</code>, <code>GeneratedPersonalData</code>, and <code>ObservedPersonalData</code>. Here the terms derive and infer relate to creation of additional data based on existing data, whereas generate refers to creation of new data that is not derived or inferred.</p>
      {{ example_aside('dex:E0009') }}
    </section>

    <section id="sensitive-data">
      <h4>Sensitive and Special Categories</h4>
      <p>For indicating personal data which is sensitive, the concept <code>SensitivePersonalData</code> is provided. For indicating special categories of data, the concept <code>SpecialCategoryPersonalData</code> is provided. In this, the concept <i>sensitive</i> indicates that the data needs additional considerations (and perhaps caution) when processing, such as by increasing its security, reducing usage, or performing impact assessments. <i>Special categories</i>, by contrast, are a 'special' type of sensitive personal data requiring additional considerations or obligations defined in laws (or through other forms) that regulate how they should be used or prohibit their use until specific obligations are met.</p>
      <div class="note">
        <p>DPV currently categorises personal data as sensitive based on existing research and literature, and as special categories based on [[GDPR]] Article 9. Both are subject to expansion in the future based on requirements and technological progress, and we welcome well-formed proposals for the same.</p>
      </div>
      <p>The sensitivity of personal data can be <i>universal</i>, where that data is always sensitive, or <i>contextual</i>, which means a use-case needs to declare it as such. For indicating personal data is sensitive (or special), it is sub-typed or declared as an instance of <code>SensitivePersonalData</code>, as shown in the example below.</p>
      <p>In using these concepts, it is important to note that <strong>DPV's modelling of sensitive and special categories is non-exhaustive</strong> and as such should not be taken as an authoritative fact or a 'source of truth'. To assist with better identifying sensitive concepts, work is ongoing within DPV to identify and provide a reference list of (potentially) sensitive and special categories, and we welcome contributions for the same.</p>
      {{ example_aside('dex:E0010') }}
    </section>

    <section id="personal-data-anonymised">
      <h4>Anonymised Data</h4>
      <p>To specify data is anonymised, DPV provides two concepts. <code>AnonymisedData</code> for when data is completely anonymised and cannot be de-anonymised, which is a subtype of <code>NonPersonalData</code>. And, <code>PseudonymisedData</code> for when data has only been partially anonymised or de-anonymisation is possible, which is a subtype of <code>PersonalData</code>.</p>      
      <p>It is important to note that these definitions can be contextually difficult to apply or interpret. For example, consider the case where some data is indicated as being <i>anonymised</i> by itself without any available information to de-anonymise it. Though this can be considered as anonymised data, if there were to exist an external method or dataset that when combined with the anonymised dataset provides de-anonymised information - then this does not fit the definition of anonymised data.</p>
      <p>Therefore, when indicating <i>AnonymisedData</i>, the understanding is that it is completely anonymised. Otherwise, given that regulations targeting <i>PersonalData</i> do not apply over anonymised data, the labelling of pseudo-anonymised or contextually anonymised data may lead to misleading representation and violating obligations.</p>
      <p>We are exploring the provision of the concept <i>ContextuallyAnonymisedData</i> as a subtype of <i>PseudonymisedData</i> to indicate situations where data is locally or contextually considered anonymised without any guarantees of its anonymity outside of that context.</p>
    </section>

  </section>

  <section id="processing-categories">
    <h3>Processing Operations</h3>
    <figure>
      <img src="../media/processing.png">
      <figcaption>Overview of top-concepts in <code>Processing</code> taxonomy</figcaption>
    </figure>
    <blockquote>
      <p>see <a href="/dpv#vocab-processing">processing section in DPV spec</a></p>
    </blockquote>
    <p>DPV’s taxonomy of processing concepts reflects the variety of terms used to denote processing activities or operations involving personal data, such as those from [[GDPR]] Article.4-2 definition of <i>processing</i>. Real-world use of terms associated with processing rarely uses these same terms, except in cases of specific domains and in legal documentation. On the other hand, common terms associated with processing are generally restricted to: collect, use, store, share, and delete.</p>
    <p>DPV provides a taxonomy that aligns both the legal terminologies such as those defined by GDPR with those used commonly. For this, concepts are organised based on whether they subsume other concepts, e.g. <a href="https://w3id.org/dpv#Use"><code>Use</code></a> is a broad concept indicating data is used, which DPV extends to define specific processing concepts for <a href="https://w3id.org/dpv#Analyse"><code>Analyse</code></a>, <a href="https://w3id.org/dpv#Consult"><code>Consult</code></a>, <a href="https://w3id.org/dpv#Profiling"><code>Profiling</code></a>, and <a href="https://w3id.org/dpv#Retrieving"><code>Retrieving</code></a>. Through this mechanism, whenever an use-case indicates it <i>consults</i> some data, it can be inferred that it also <i>uses</i> that data.</p>
    <div class="note" title="Need for ensuring accuracy of processing terms in an use-case">
      <p>The definitions for describing and interpreting each processing concept is based on the following sources: language dictionaries (predominantly Oxford English), use of the term within legal documents (e.g. GDPR case law), and technology-specific interpretations such as for IT systems. Despite these, there may be distinct interpretations for what a term represents based on differences in practices, culture, language, and domains. In case an adopter or a use-case foresees such ambiguity or confusion, it is advisable to extend the relevant concepts and define them as needed, or create a separate extension.</p>
    </div>

    <section id="data-storage">
      <h4>Processing and Storage Conditions</h4>
      <blockquote>
      <p>see <a href="/dpv#vocab-processing-context-storage-automation">processing and storage conditions section in DPV spec</a></p>
    </blockquote>
      <p>The processing taxonomy uses the concept <code>Use</code> and <code>Store</code> to indicate data is being used and stored. To specify additional information such as its location, erasure or deletion, the generic concepts and relations associated with processing (i.e. <i>location</i> and <i>duration</i>) can be used. However, to emphasise that information about storage - such as policies, conditions, rules, or documentation - are critical on considerations of data protection and privacy as well as legal compliance, DPV provides specific concepts related to these.</p>
      <p>To indicate additional information about processing, such as where it takes place (location), or for how long (duration), DPV provides <code>ProcessingCondition</code> concept and the relation <code>hasProcessingCondition</code> to associate it. Specific processing conditions are represented as <code>ProcessingLocation</code> (also a subtype of <code>dpv:Location</code>) and <code>ProcessingDuration</code> (also a subtype of <code>dpv:Duration</code>).</p>
      <p>The concept <code>StorageCondition</code> is a specific category of <code>ProcessingCondition</code> associated with the storage of data, and is associated using the relation <code>hasStorageCondition</code>. It is specialised to indicate <code>StorageDuration</code>, <code>StorageDeletion</code>, <code>StorageRestoration</code>, and <code>StorageLocation</code>. This enables a document to directly specify information such as: "storage duration is 6 months" or "storage restoration uses 3 geo-distinct backup servers".</p>
      {{ example_aside('dex:E0011') }}
    </section>

    <section id="data-source">
      <h4>Data Source</h4>
      <blockquote>
      <p>see <a href="/dpv#vocab-processing-context">data source section in DPV spec</a></p>
    </blockquote>
      <p>For declaring the source of data, the <code>DataSource</code> concept along with <code>hasDataSource</code> relationship is provided to indicate where the data is collected or acquired from. For example, data can be obtained from the data subject directly (e.g. given via forms) or indirectly (e.g observed from activity, or inferred from existing data), or from another entity such as a third party.</p>
      <div class="note" title="Source vs Origin">
        <p>It is important to understand the distinction between a <i>data source</i> and <i>data origin</i>. The source of data refers to the direct or indirect place, entity, or other concept from which the data was collected (in any manner). The origin of data refers to the specific entity or artefact which <i>produced</i> or <i>created</i> the data. For example, consider a company that collects data from a public database that is populated by government bodies who themselves collect that data from people. In this case, the origin of that data is ultimately the people, but the sources of this information are the people, the government bodies, and the public database.</p>
        <p>Using such two synonymous terms (source and origin) can lead to ambiguity and confusion. Therefore, we suggest using data source to indicate information as contextually required within a use-case. In most cases, this would be the direct source of data (i.e. public database in above example). In other cases, it would be relevant to indicating whether data originated from the data subject.</p>
      </div>
      <p>Data can be sourced from a public or a non-public source. The distinction is important given that a public source has different implications (and justifications) for the availability of that data as well as how it can be used. To represent these, DPV uses sub-types of data source as <code>PublicDataSource</code> and <code>NonPublicDataSource</code>. Public data sources can be datasets published by authoritative bodies, or census reports, or (public) websites. Non-public data sources are anything that is not publicly available - so data subjects, third parties, etc.</p>
      {{ example_aside('dex:E0012') }}
    </section>

    <section id="processing-automation">
      <h4>Automation, Human Involvement, and Decision Making</h4>
      <blockquote>
        <p>see <a href="/dpv#vocab-processing-context-storage-automation">automation and human involvement section in DPV spec</a></p>
      </blockquote>
      <p>Automation is a broad concept that refers to automated or reduced human involvement in a process. Most (if not all) processing operations can be considered to be automated given that they are operated by machines and utilise digital information and mediums. However, even within this, specific forms and descriptions of automation are more important than others. For example, if the processing operations are intended to produce an output that will result in prosecution - then information about the automation utilised in this process is needed to understand if the decisions are fair, correct, unbiased, or to understand whether there has been some human oversight or involvement at various stages.</p>
      <div class="note" title="Automation and Artificial Intelligence">
        <p>DPV's concepts intentionally refer to "<i>automation</i>" rather than "<i>artificial intelligence</i>", where the former is considered a broader and more inclusive term than the latter. It also avoids delving into investigations of what is and how to define "AI". Given that AI is a form of automation, whether directly or indirectly applied, these terms within the DPV are also intended to supplement use-cases where AI is used, and to represent information regarding the degree of automation and involvement of humans within its processes.</p>
      </div>
      <p>DPV provides <code>AutomationLevel</code> to represent the degree of automation, and the relation <code>hasAutomationLevel</code> to associate it with contextual concepts. The levels of automation, in order from least automated to most, are: <code>NotAutomated</code>, <code>AssistiveAutomation</code>, <code>PartialAutomation</code>, <code>ConditionalAutomation</code>, <code>HighAutomation</code>, <code>FullAutomation</code>, and <code>Autonomous</code>.</p>
      <p>To represent how humans are involved, the concept <code>HumanInvolvement</code> and relation <code>hasHumanInvolvement</code> are provided. Examples of human involvement include: <code>HumanInvolvementForControl</code>, <code>HumanInvolvementForDecision</code>, and <code>HumanInvolvementForOversight</code>.</p>
      <p>In addition to 'human' involvement, DPV also provides various ways in which 'entities' (e.g. organisations, individuals) can be involved through the <code>EntityInvolvement</code> and the relation <code>hasEntityInvolvement</code>. These are categorised as <i>permissive</i> involvement where an entity can do something, and <i>non-permissive</i> involvement where an entity cannot do something.</p>
      <aside class="note" title="Non-permissive vs Prohibited">
        <p>Here, 'non-permissive' is used with distinction from 'prohibited' as the intent is to represent whether one entity provides some ability for another or does not, whereas prohibition implies explicitly not allowing something to happen. For example, indicating whether an entity can or cannot correct the output of a process is distinct from stating an entity is prohibited from correcting the output.</p>
      </aside>
      <p>To indicate the process contains some form of decision making, the processing context concept <code>DecisionMaking</code> is provided, and extended as <code>AutomatedDecisionMaking</code> to represent automation in decision making. To represent information about how the automation works or other relevant information, the concept <code>AlgorithmicLogic</code> is provided. Additionally, the concept <code>EvaluationScoring</code> is provided for indicating the processing evaluates or assigns scores (or metrics), <code>InnovativeUseOfNewTechnologies</code> to indicate there are innovative uses of novel technologies, and <code>SystematicMonitoring</code> to indicate the processing performs a systematic (or systemic) monitoring. These additional concepts are intended to model areas or topics that are considered sensitive or high-risk or require caution such as under [[GDPR]].</p>
      {{ example_aside('dex:E0013') }}
    </section>
  </section>

  <section id="legal-basis">
    <h3>Legal Basis</h3>
    <figure>
        <img src="../media/legal_bases.png">
        <figcaption>Overview of Legal Basis concepts in DPV</figcaption>
      </figure>
    <blockquote>
      <p>see <a href="/dpv#vocab-legal-basis">legal bases section in DPV spec</a></p>
    </blockquote>
    <p>DPV provides the following categories of legal bases based on [[GDPR]] Article 6: consent of the data subject, contract, compliance with legal obligation, protecting vital interests of individuals, legitimate interests, public interest, and official authorities. Though derived from GDPR, these concepts can be applied for other jurisdictions and general use-cases. The legal bases are represented by the concept <code>LegalBasis</code> and associated using the relation <code>hasLegalBasis</code>.</p>

    <p>When declaring a legal basis, it is important to denote under what law or jurisdiction that legal basis applies. For instance, using <code>Consent</code> as a legal basis has different obligations and requirements in EU (i.e. [[GDPR]]) as compared to other jurisdictions. Therefore, unless the information is to be implicitly interpreted through some specific legal lens or jurisdictional law, DPV recommends indicating the specific law or legal clause associated with the legal basis so as to scope its interpretation. This can be done using the relation <code>hasJurisdiction</code> or <code>hasLaw</code>.</p>

    <p>For GDPR, DPVCG provides the [[[EU-GDPR]]] which defines the legal bases within [[GDPR]] by extending them from relevant concepts within the DPV. We welcome similar contributions for extending the GDPR extension as well as creating extensions for other laws and domains.</p>
    {{ example_aside('dex:E0014') }}    
    <div class="note"><p>When using legal bases, we advise careful consideration whether the information to be represented is regarding a specific instance (e.g. consent of a specific individual) or a general category (e.g. contract with service consumer/users), and to utilise DPV concepts accordingly.</p></div>

  <section id="consent">
    <h3>Consent</h3>
    <figure>
        <img src="../media/Consent.png">
        <figcaption>Denoting information using <code>Consent</code></figcaption>
      </figure>
    <blockquote>
      <p>see <a href="/dpv#vocab-legal-basis-consent">consent legal basis section in DPV spec</a></p>
    </blockquote>
    <p><code>Consent</code> is an important legal basis given its emphasis on individual empowerment and control, as well as the attention and relevance it receives from being part of direct interactions with individuals. DPV provides concepts for representing information about how consent, as a legal basis, is utilised (by the Controller), provided or given (by the Data Subject), how long it is considered to be valid (its duration), and how it can be withdrawn. It also provides concepts related to management of information, such as keeping track of whether the consent has been requested, was refused, or has been given. This information can be utilised in applications associated with consent, such as creating a ‘record’ of consent or building and executing rules for compliance.</p>
    <p>Given the reliance of consent as a legal basis whose validity is associated with requirements and obligations based on jurisdictional laws, DPV does not explicitly provide constraints on what should be considered a ‘valid’ consent. Instead, it focuses on providing declaration of information about consent so as to aid in the determination of its validity, and to record its use and changes over time. Further information concerning compliance obligations and requirements related to consent are considered within the scope of the DPVCG, and we welcome contributions on how this can be represented in a coherent manner that is compatible with the rest of DPV.</p>
    <p>The concept <code>Consent</code> can be used as is or with another concept as its legal basis e.g. <code>Process</code> and <code>hasLegalBasis</code>. Similarly, the relevant information, such as purposes or personal data for which consent is expressed can be associated with consent or the concept it is used within using relations such as <code>hasPurpose</code> and <code>Purpose</code></a>. The example on consent records shown below demonstrates how DPV can be used to create a record of consent which describes where consent is used as a legal basis and contains information about an individual's consent.</p>
    <aside class="note" title="Guide for implementing consent records as per ISO/IEC TS 27560:2023">
      <p>For representing information about consent and maintaining consent records, the guide [[[GUIDE-Consent-27560]]] provides a detailed description of the ISO/IEC TS 27560:2023 standard with examples for its implementation using DPV.</p>
    </aside>
    {{ example_aside('dex:E0015') }}
    {{ example_aside('dex:E0016') }}

    <section>
      <h4>Consent Notice</h4>
      <p>Requirements for <i>informed</i> consent require provision of information before the consent is obtained so as to inform the individual. This information is typically provided through a <i>notice</i>, which can be specified using the concept <code>ConsentNotice</code> and the relation <code>hasNotice</code>. As with the previous notice example, a consent notice can be a link to the actual notice document or web-page, or contain description of the notice contents regarding processing of personal data.</p>
      <aside class="note" title="Guide for implementing privacy notices for consent as per ISO/IEC 29184:2020">
      <p>We are working on providing a guide for implementing privacy notices for consent as per the ISO/IEC 29184:2020 standard. It will be provided as: [[[GUIDE-Notice-29184]]].</p>
    </aside>
      {{ example_aside('dex:E0017') }}
    </section>

    <section>
      <h4>Consent Types</h4>
       <p>By default, consent is expected to adhere to several requirements such as being informed, freely given, and so on - typically defined within law or other relevant guidelines, that determine how it is requested, expressed, and evaluated for validity. In DPV, these are referred to as <i>types of consent</i>.</p>
       <p>DPV provides <code>InformedConsent</code> and <code>UninformedConsent</code> as two distinct concepts related to whether the consent is informed or not. For more types of informed consent, the concept <code>ImpliedConsent</code> specifies when consent is indirectly expressed or is assumed, and <code>ExpressedConsent</code> for when the individual specifically takes an action to (only) express their consent. The difference between the two can be better understood as follows: if the individual performs an action, and that action only relates to consent, then it is said to be <i>expressed consent</i>, whereas if that action also relates to other matters in addition to being about consent, then the interaction is said to be <i>implied (form of) consent</i>. Clicking a button on a consent notice is a direct action and is thus a form of expressed consent. Assuming consent based on continued scrolling of a web page is an indirect or assumed action, and is thus implied consent.</p>
       <div class="note" title="Implied Consent in DPV is not the same as Medical Implied Consent">
          <p>In medical terminology, "<a href="https://en.wikipedia.org/wiki/Implied_consent#Medical_care"><i>implied consent</i></a>" is an assumption that the person's consent is present so as to avoid the restrictions of collecting consent prior to any (emergency)treatment. This is not the case with privacy and data protection perspectives, where 'implied consent', no matter how well intentioned the purpose may be, should not be considered 'assumed' without any specific action.</p>
          <p>Therefore, we welcome well reasoned arguments and concrete proposals to express other types of consent, including justifications for where concepts such as <code>AssumedConsent</code> may be useful and have a basis in a law or other authoritative source.</p>
        </div>
      <p>When the expressed action for consent only (and only) refers to matters related to consent, then such consent is represented by <code>ExplicitlyExpressedConsent</code>. For example, if a button for expressing consent relates to conveying decisions about consent, but also other things such as to navigate to the next page, then this is a clear and specific action for expressing consent. However, if such a button only relates to indicating consent, then it is <i>explicitly about consent</i>, and is thus an instance of <i>Explicitly Expressed Consent</i>.</p>
      <div class="note" title="Explicit consent in DPV, ISO, and GDPR">
        <p>The term <i>explicit consent</i> is present in both ISO as well as GDPR and other laws. However, definitions differ significantly and are incompatible with each other. For example, what ISO considers 'explicit' would be 'expressed' (or regular) under GDPR. The approach taken by DPV is intentional towards enabling such variations to be expressed in specific extensions by building on top of the core vocabulary concepts. For example, the [[EU-GDPR]] extension defines <code>A6-1-a-explicit-consent</code> and <code>A9-2-a</code> as subtypes of <code>ExplicitlyExpressedConsent</code> based on the specific requirements and criteria defined by GDPR.</p>
      </div>
      {{ example_aside('dex:E0018') }}
    </section>

    <section>
      <h4>Consent Status</h4>
      <p>The state or status of <i>consent</i> refers to the stage of information about a particular consent instance within its lifecycle. For example, (given) consent first starts with the identification of need to ask consent, then issuing a request (to the individual), making a decision (by the individual), and then following it up with further actions such as the individual withdrawing it. Keeping track of such information is necessary in order to determine whether the current stage of consent information is suitable for its use in justifying processing of personal data governed by that consent, as well as to fulfil obligations such as to keep records of consent. To assist with such consent information management, DPV provides <i>Consent Status</i> as a way to represent the lifecycle and usefulness of an instance towards processing personal data.</p>
      <p>DPV's Consent Statuses are represented by <code>ConsentStatus</code> and indicated using <code>hasConsentStatus</code> relation. The statuses are segregated into two categories based on their interpretation towards processing: <code>ConsentStatusValidForProcessing</code> and <code>ConsentStatusInvalidForProcessing</code>. There are (currently) only two statuses that are valid for processing: <code>ConsentGiven</code> representing the individual has consented, and <code>RenewedConsentGiven</code> where an earlier given consent is <i>renewed</i>, <i>refreshed</i>, or <i>reaffirmed</i>.</p>
      <p>The rest of (currently) 8 statuses refer to various stages that are considered invalid for processing. These are: <code>ConsentUnknown</code> for when information about the status is unknown or unconfirmed, <code>ConsentRequested</code> for when a request to obtain or give consent has been made, <code>ConsentRequestDeferred</code> for when the request was opted to be dismissed or delayed without a decision, <code>ConsentRefused</code> for when consent was refused, <code>ConsentExpired</code> for when the validity (temporal or otherwise) associated with a given consent instance has lapsed, <code>ConsentInvalidated</code> for when a given consent instance is found invalid e.g. by a court, <code>ConsentRevoked</code> for when a given consent instance is revoked or terminated such as when a service provider stops providing the service, and <code>ConsentWithdrawn</code> for when the individual withdraws a previously given consent.</p>
    </section>

<section>
    <h4>Consent Indication</h4>
      <p>To indicate which entity is responsible for a specific consent stage (e.g. individual for given consent, requestor for consent requested), the relation <code>isIndicatedBy</code> is provided. It can be used with any <code>Entity</code> such as <code>DataSubject</code> or its subtypes such as <code>User</code> or specific instances of these to record information regarding who was responsible for the indicated status and consent action. To indicate the method by which an entity has indicated the specific consent, the relation <code>hasIndicationMethod</code> is provided. To indicate the time (or similar temporal information), the relation <code>isIndicatedAtTime</code> is provided.</p>
      <div class="note" title="Common legal concepts/properties">
        <p>The concepts and relations mentioned here regarding consent, such as <i>isIndicatedBy</i>, are also applicable and suitable for use with other legal bases or actions, such as contracts, legal requests, or exercising rights. Therefore, these can also be used in other contexts as deemed suitable. We are working on providing specific concepts and guidance for more detailed representation of information for such other legal bases and actions.</p>
      </div>
      <p>To specify consent provided by delegation, such as in the case of a parent or guardian providing consent for/with a child, the <code>isIndicatedBy</code> relation can be used to associate the parent or guardian responsible for providing consent (or its affirmation). Since by default the consent is presumed to be provided by the individual, when such individuals are associated with their consent, i.e. through <code>hasDataSubject</code>, the additional information provided by <code>isIndicatedBy</code> can be considered redundant and is often omitted.</p>
      <p>To indicate how consent is to be provided or withdrawn e.g. how should an individual express or withdraw their consent, DPV provides <i>Consent Controls</i> as: <code>ProvideConsent</code> for the individual to provide or give their consent, <code>ObtainConsent</code> for the organisation to obtain or collect consent from the individual, <code>WithdrawConsent</code> for the individual to withdraw their given consent, and <code>ReaffirmConsent</code> for entities to re-affirm their previously provided or obtained consent. To indicate how to implement the action e.g. provide consent, the relation <code>isExercisedAt</code> should be used.</p>
  </section>

  <section>
      <h4>Duration of Consent</h4>
      <p>To indicate the duration or validity of a given consent instance, the existing contextual relation <code>hasDuration</code> along with specific forms of <code>Duration</code> can be used. For example, to indicate consent is valid until a specific event such as account closure, the duration subtype <code>UntilEventDuration</code> can be used with additional instantiation or annotation to indicate more details about the event (in this case the closure of account). Similarly, <code>UntilTimeDuration</code> indicates validity until a specific time instance or timestamp (e.g. 31 December 2022), and <code>TemporalDuration</code> indicates a relative time duration (e.g. 6 months). To indicate validity without an end condition, <code>EndlessDuration</code> can be used.</p>
      <p>While the above information considered <i>duration</i> as determining the validity of given consent, there are also other uses of duration associated with consent. For example, the duration information is intended to be a trigger to confirm or renew consent instead of rendering it invalid immediately. Or, the duration associated with <i>ConsentRequested</i> could be used to indicate when consent should be requested again.</p>
    </section>
</section>

  </section>

  <section id="legal-entities">
    <h3>Entities</h3>
    <figure>
        <img src="../media/Entities.png">
        <figcaption>Overview of Entities in DPV</figcaption>
    </figure>
    <blockquote>
      <p>see <a href="/dpv#vocab-entities">entities section in DPV spec</a></p>
    </blockquote>
    <p>A ‘legal entity’ is an entity whose role is defined legally or within legal norms. DPV provides a taxonomy of entities based on their application within laws and use-cases. Alongside <code>DataController</code> and <code>DataSubject</code>, the DPV also defines other types of entities involved in the processing of personal data such as <code>DataProcessor</code>, <code>ThirdParty</code>, or terms associated with data transfers such as <code>DataImporter</code> and <code>DataExporter</code>. In addition to these, various kinds of <code>Authority</code>, including <code>DataProtectionAuthority</code> are also provided</code>.</p>

    <section>
      <h4>Entity Descriptions</h4>
      <figure>
        <img src="../media/Entities_description.png">
        <figcaption>Describing Entities in DPV</figcaption>
      </figure>
      {{ example_aside('dex:E0019') }}
    </section>
    <section>
      <h4>Legal Roles</h4>
      <figure>
        <img src="../media/legalentities.png" />
        <figcaption></figcaption>
      </figure>
      <p>To specify the <i>roles</i> organisations can take in the context of data processing, DPV defines the following concepts based on terminology from ISO 29100 and GDPR. In these, an entity can take on one or more roles as necessary or specified within an use-case.</p>
      <ul>
        <li><code>DataController</code> - An entity responsible for deciding the purposes and means of processing.</li>
        <li><code>DataProcessor</code> - An entity contracted by a Controller to carry out the processing.</li>
        <li><code>DataSubProcessor</code> - An entity contracted by a Processor to carry out the processing.</li>
        <li><code>Recipient</code> - An entity that is recipient of personal data</li>
        <li><code>ThirdParty</code> - An entity other than a Controller or a Processor who also processes personal data</li>
        <li><code>DataExporter</code> - An entity that exports data across a jurisdiction or context.</li>
        <li><code>DataImporter</code> - An entity that imports data into a jurisdiction or context.</li>
        <li><code>JointDataControllers</code> - Multiple Controllers that together are responsible as Controller(s) for the processing of personal data.</li>
        <li><code>DataProtectionOfficer</code> - An agent affiliated or part of another entity and represents it regarding overseeing processing of personal data and its relevant obligations.</li>
      </ul>
    </section>
    <section>
        <h4>Organisation Categories</h4>
        <figure>
         <img src="../media/Entities_organisations.png">
         <figcaption>Describing Entities in DPV</figcaption>
        </figure>
        <p><code>Organisation</code> is a specified type of entity, representing common concepts such as <i>Company</i> or <i>Business</i>, as well as non-commercial entities such as <i>NGO</i> or <i>University</i>. To assist with expressing such common types of organisations, DPV provides concepts covering Industry, Governmental bodies, NGOs, For and Not-For Profits, and Academic or Scientific Organisations.</p>
        <p>We are looking to provide a rich collection of organisation types to accurately reflect the contextual differences between specific organisation types based on domain (e.g. education and school) and roles (e.g. vendor, procurer). Suggestions and proposals for these are invited.</p>
    </section>
    <section>
      <h4>Authorities</h4>
      <p>The concept <code>Authority</code> is a specific Governmental Organisation authorised to enforce a law or regulation. Authorities can be associated with a specific domain, topic, or jurisdiction. DPV currently defines regional authorities for <code>NationalAuthority</code>, <code>RegionalAuthority</code>, and <code>SupraNationalAuthority</code>, and <code>DataProtectionAuthority</code> represents authorities associated with data protection and privacy. To associate authorities with concepts, the relations <code>hasAuthority</code> and <code>isAuthorityFor</code> are provided.</p>
    </section>
    <section>
      <h4>Data Subjects</h4>
      <p>DPV provides a taxonomy of data subject types to assist with describing what kind of individuals or groups are associated with an use-case. Some examples of such types are age-based roles: <code>Adult</code> and <code>Child</code>, <code>ParentOfDataSubject</code>, <code>GuardianOfDataSubject</code>; vulnerability: <code>VulnerableDataSubject</code>, <code>ElderlyDataSubject</code>, <code>AsylumSeeker</code>; domain-specific roles such as <code>Patient</code>, <code>Employee</code>, <code>Student</code>, jurisdictional roles such as <code>Citizen</code>, <code>NonCitizen</code>, <code>Immigrant</code>; and general roles such as <code>User</code>, <code>Member</code>, <code>Participant</code>, and <code>Client</code>.
    </section>
  </section>

  <section id="technical-and-organisational-measures">
    <h3>Technical and Organisational Measures</h3>
    <figure>
      <img src="../media/TechnicalOrganisationalMeasure.png">
      <figcaption>Overview of Technical and Organisational Measure concepts in DPV</figcaption>
    </figure>
    <blockquote>
      <p>see <a href="/dpv#vocab-TOM">technical and organisational measures section in DPV spec</a></p>
    </blockquote>
    <p>DPV's taxonomy of tech/org measures are structured into four groups representing: <code>TechnicalMeasure</code> for technical solutions, <code>OrganisationalMeasure</code> for organisational solutions, <code>LegalMeasure</code> for legally enforceable solutions, and <code>PhysicalMeasure</code> for material solutions. Each term has a dedicated taxonomy that expands upon the core idea to provide a rich list of measures that are intended to protect personal data (and its associated entities and consequences).</p>
    <div class="note"><p>DPV is looking to enrich its taxonomy of technical and organisational measures through adoption of existing standards, best practices, and widely relevant practices. For this, we welcome contributions of concepts from sources such as ISO/IEC standards, ENISA, NIST, IETF, and others.</p></div>

    <section>
      <h4>Technical Measures</h4>
      <figure>
        <a href="../media/TechnicalMeasure.png"><img src="../media/TechnicalMeasure.png" style="width: auto; max-height: 500px;"></a>
        <figcaption>Overview of Technical Measures in DPV (click to open in new window)</figcaption>
      </figure>
      <p>Technical Measures are implemented through technological means, such as machine-processing or automation or tools and services that are primarily technological in nature. To distinguish these with organisational measures, consider whether the measure is for human organisation and management (which makes it <i>organisational</i>) or an implementation detail (which makes it <i>technical</i>).</p>
      <p>Examples of technical measures include use of specific access control methods, encryption, anonymisation, security protocols, and other similar concepts.</p>
      {{ example_aside('dex:E0020') }}
    </section>

    <section>
      <h4>Organisational Measures</h4>
      <figure>
        <a href="../media/OrganisationalMeasure.png"><img src="../media/OrganisationalMeasure.png"></a>
        <figcaption>Overview of Technical Measures in DPV (click to open in new window)</figcaption>
      </figure>
      <p>Organisational measures are a corresponding counterpart to technical measures, and are intended to be implemented or realised through <i>human action</i>, whether directly by an individual, teams, or through an organisation's management (hence the term <i>organisational</i>). Implementing such measures may include use of technology or a tool, for example - a security training exercise that is carried out using some software, or to use information systems such as dashboards to keep track of information. However, the concepts themselves are structured as organisational based on who or what has to <i>decide</i> or <i>implement</i> the action. If it is to be performed through a technological means, then it is a technical measure. If it is to be performed through human or organisation management, then it is an organisational measure.</p>
      <p>Examples of organisational measures include staff training, policies, notices, and other such concepts - which indicate that reflect organisational decisions and actions (e.g. privacy notices, policy for how to train new recruits).</p>
      {{ example_aside('dex:E0021') }}

    </section>

    <section id="tom-legal">
      <h4>Legal Measures</h4>
      <p>Legal measures are organisational measures that have enforceability or a basis in law. Examples of legal measures are contracts, non-disclosure agreements, licenses, data processing and other agreements. Legal measures are represented using the concept <code>LegalMeasure</code> and associated with using the relation <code>hasLegalMeasure</code>. </p>
    </section>

    <section id="tom-physical">
      <h4>Physical Measures</h4>
      <p>Physical measures are implementations that have a physical material presence or address the physical safety and security. For example, physical authorisation methods such as door locks, network security using physical means such as locked server rooms, and physical device security. Physical measures are represented using the concept <code>PhysicalMeasure</code> and associated with using the relation <code>hasPhysicalMeasure</code>. </p>
    </section>

    <section id="tom-policies">
      <h4>Policies</h4>
      <p>A <code>Policy</code> is an organisational measure (given that it is decided and enabled by humans) that can be used to describe procedures or encode actions. It may be implemented manually (e.g. by employees) or technologically (e.g. by software or agents). Policies are an important aspect of personal data processing, and can be associated with a wide variety of concepts - such as processing operations, purposes, specific data categories, or legal bases. To enable such uses, DPV provides the relation <code>hasPolicy</code> and <code>isPolicyFor</code> to link or associate policies with their respective subjects or topics.</p>
      <div class="note" title="Privacy Policy vs Privacy Notice">
        <p>DPV does not provide the concept <i>PrivacyPolicy</i>, but instead suggests to use the better expressed and less ambiguous term - <code>PrivacyNotice</code>. This is to explicitly denote that the role of what is considered common as a "privacy policy" is actually a "notice" intended for end users and other individuals, instead of being an internal policy document for how the company should approach 'privacy'. More information about notices is provided in the next section.</p>
      </div>
      <p>Common policies provided by DPV include: <code>InformationSecurityPolicy</code> for how information is secured or safeguarded, and <code>RiskManagementPolicy</code> for how risks should be managed. In the future, we expect there to be more concepts added for dedicated policies as regulations and the general culture of privacy and data protection progresses.</p>
    </section>

    <section id="tom-notices">
      <h4>Notices</h4>
      <p>A <code>Notice</code> is an artefact intended to provide information, most commonly to individuals who are viewing, visiting, or otherwise using a service. Legally, a 'notice' is provision of information with the intention of imparting knowledge. DPV represents notices through the concept <code>Notice</code> as a form of Organisational Measure, with the relation <code>hasNotice</code> enabling use or association of notice within some context.</p>
      <p>Notices may contain only information, or also have interactive components intended to make decisions, offer choices and controls, or otherwise carry out processes that go beyond mere provision of information. Currently, <code>PrivacyNotice</code> and <code>ConsentNotice</code> are provided as specific forms of notices.</p>
      {{ example_aside('dex:E0022') }}
    </section>

    <section id="tom-records">
      <h4>Records</h4>
      <p>Records, or storing of information with the intention to use it in the future, are an important obligation for several legal as well as other obligations related to data protection and privacy. To represent these, DPV provides the <code>RecordsOfActivities</code> concept for records in general, and <code>DataProcessingRecords</code> for records that relate to the processing of personal data. The concept <code>ROPA</code>, based on [[GDPR]] Art.30, refers to 'records of processing activities' which are like an index of data processing activities. Where consent is used as the legal basis, the concept <code>ConsentRecord</code> relates to records related to such consent and its collection / use for processing of personal data.</p>
      <div class="note" title="Records as documentation vs Records as processing operation">
        <p>DPV also contains the <code>Record</code> concept as a type of Processing operation, and <code>RecordManagement</code> as a type of Purpose. The former refers to recording of personal data as a means to obtain it (e.g. record a conversation), while the latter relates to the use of personal data towards creating records and managing them as a purpose (e.g. record consent was given). These are distinct, though relevant to the organisational measures related to record keeping.</p>
      </div>
      <p>Record keeping may require further vocabularies to represent details such as various temporal annotations, provenance, statuses, or other contextual information that is not possible or provided for by DPV's concepts. In such cases, we suggest utilising other standardised vocabularies where applicable.</p>
      {{ example_aside('dex:E0023') }}
    </section>

    <section id="tom-security">
      <h4>Security</h4>
      <p>All technical and organisational measures are intended, by definition, to provide better security and handling of personal data and its associated processing and other activities. In DPV's taxonomy, some measures directly and specifically relate to security as their topic, whilst others provide their intended benefit indirectly. For example, the concept <code>SecurityAssessments</code> is an organisational measure relating to how security is assessed (and thus ultimately improved) - and is directly associated with security as a topic. Whereas a concept such as <code>ProfessionalTraining</code> relates to measures that are not directly tied to security, but can be associated in cases where the training is related to security or specific security measures or risks (e.g. cybersecurity data breach mitigations). The purpose <code>EnforceSecurity</code> provides a common umbrella term for personal data that is utilised for enacting and enforcing security measures, such as for authorisation and authentication.</p>
      <p>Technical measures that relate specifically to security include <code>SecurityMethod</code> for providing security, and its subtypes for <code>DocumentSecurity</code>, <code>FileSystemSecurity</code>, <code>HardwareSecurityProtocols</code>, <code>IntrusionDetectionSystem</code>, <code>MobilePlatformSecurity</code>, <code>NetworkSecurityProtocols</code>, <code>OperatingSystemSecurity</code>, <code>WebBrowserSecurity</code>, <code>WebSecurityProtocols</code>, and more. Organisational measures that relate specifically to security include <code>SecurityProcedure</code>, and its subtypes for <code>BackgroundChecks</code>, <code>CybersecurityAssessments</code>, <code>CybersecurityTraining</code>, <code>SecurityAssessments</code>, and more.</p>
    </section>

    <section id="tom-agreements">
      <h4>Data Processing Agreements</h4>
      <p>The term <i>Data Processing Agreement</i> refers to a broad concept related to contracts or agreements between entities representing conditions regarding the processing of (personal-)data. This can include ad-hoc 'data handling' policies such as NDAs, embargoes, and enforcement of practices, as well as more formal and legal binding contractual obligations such as those between a Controller and a Processor.</p>
      <p>To represent such concepts, DPV provides <code>LegalAgreement</code>, along with subtypes for <code>NDA</code> (Non-disclosure agreements), <code>ContractualTerms</code>, and <code>DataProcessingAgreement</code>. In these, it is important to remember that while <i>contract</i> can also be as a form of legal basis, the concept represented here is not necessarily the same <i>contract</i> as that is used to justify the processing of personal data with a data subject. Instead, <i>contracts</i> are a broad category representing contractual terms governing data handling within or with an entity.</p>
      <p>For representing specific agreements between entities (other than those with data subjects - which are covered in Legal Basis taxonomy), DPV provides the following types of agreements:</p>
      <ul>
        <li><code>ControllerProcessorAgreement</code>: An agreement between a Controller and a Processor, where the Controller instructs the Processor(s) to carry out processing on its behalf.</li>
        <li><code>JointControllersAgreement</code>: An agreement between two or more Controllers to act as a 'Joint Controller'.</li>
        <li><code>SubProcessorAgreement</code>: An agreement between two or more Processors where one Processor instructs another to carry out processing on its behalf.</li>
        <li><code>ThirdPartyAgreement</code>: An agreement between a Data Controller or a Data Processor, and a Third Party. Note that this is a loosely defined concept, as depending on the jurisdiction, this relationship may result in the Third Party being a Data Controller or a Joint Data Controller.</li>
      </ul>
      <p>To indicate the entities involved in an agreement, the relation <code>hasEntity</code> can be used, or relations associated with specific roles to indicate contextuality. For example, using <code>hasDataController</code> with a <code>ControllerProcessorAgreement</code> denotes the Data Controller for that agreement.</p>
      {{ example_aside('dex:E0024') }}
    </section>

    <section id="tom-safeguard">
      <h4>Data Transfer Safeguards</h4>
      <p>While all technical and organisational measures are intended to safeguard personal data and its associated activities, there may be contextual or use-case requirements to explicitly indicate safeguards against or for specific criteria. To enable such use, DPV provides the concept <code>Safeguard</code> and its subtype <code>SafeguardForDataTransfer</code> for indicating application when data is being transferred. Through these, it is possible to represent aspects such as policies for data transfers, specific measures such as encryption being applied, and other pertinent information in combination with DPV's concepts from technical and organisational measures.</p>
      {{ example_aside('dex:E0025') }}
      <aside class="note" title="GDPR's Data Transfer Tools">
        <p>[[GDPR]] and its various guidelines utilise the term "data transfer tools" to refer to specific measures that aid in safeguarding data transfers. Given this jurisdiction-specific nomenclature and its applicability being restricted to GDPR, DPVCG provides the concept <code>DataTransferTool</code> and its implementations (such as the SCCs above) within the [[EU-GDPR]] extension.</p>
      </aside>
    </section>

    <section>
      <h4>Impact Assessments</h4>
      <figure>
        <img src="../media/ImpactAssessment.png">
        <figcaption>Types of Impact Assessments in DPV</figcaption>
      </figure>
      <p>DPV provides the concept <code>Assessment</code> to represent various assessments and related procedures and processes that an organisation or entity may undertake. An important subtype of such assessments is the <code>ImpactAssessment</code> which refers to calculating or determining the likelihood of impact of an existing or proposed process and its involved risks or detriments. This could be inward facing - such as impact to the organisation, or outward facing - regarding impact to stakeholders such as individuals. </p>
      <p>To represent privacy related impact assessments, the concept <code>PIA</code> (Privacy Impact Assessment) is provided. Similarly, the concept <code>DPIA</code> is provided for Data Protection Impact Assessment. Without getting into specifics of jurisdictional nomenclature (more specifically GDPR), DPVCG considers PIA and DPIA to be distinct terms based on their topic of focus. The PIA process is based on privacy as its focal point whereas the DPIA process considers the processing of personal data. Both refer to impacts (e.g. individuals affected), and may contain overlapping processes and outcomes. DPVCG suggests using the concept most suitable or applicable for a given use-case, or which matches the terminology of an obligation. For example, the concept <code>DPIA</code> would be more suitable for systems based on GDPR's requirements. It is also possible to utilise both terms to refer to the same process, for example to specify that an assessment satisfies both PIA and DPIA criteria (as suggested by <a href="https://www.cnil.fr/en/privacy-impact-assessment-pia">CNIL</a> - the French DPA).</p>
      <p>Other assessments represented within DPV include: <code>DataTransferImpactAssessment</code> for impacts arising from data transfers, <code>LegitimateInterestAssessment</code> for determining the suitability of legitimate interest as a lawful basis, and <code>SecurityAssessments</code> to identify gaps, vulnerabilities, risks, and effectiveness of controls.</p>
    </section>
  </section>

  <section>
    <h3>Location and Jurisdiction</h3>
    <blockquote>
      <p>see <a href="/dpv#vocab-context-jurisdiction">location and jurisdiction section in DPV spec</a></p>
    </blockquote>
    <p>To represent location, the concept <code>Location</code> along with relations <code>hasLocation</code> is provided. For geo-political locations, the concepts such as <code>Country</code> and <code>SupraNationalUnion</code> are subtyped, with <code>hasCountry</code> and <code>ThirdCountry</code> with <code>hasThirdCountry</code> provided for convenience in common uses (e.g. data storage, transfers).</p>
    <p>To define contextual location concepts, such as there being several locations, or that the location is 'local' to an event, DPV provides two concepts. <code>LocationFixture</code> specifies whether the location is 'fixed' or 'deterministic', with subtypes for <i>fixed single</i>, <i>fixed multiple</i>, and <i>variable</i> locations. <code>LocationLocality</code> specifies whether the location is 'local' within the context, with subtypes for <i>local</i>, <i>remote</i>, <i>within a device</i>, or <i>in cloud</i>.</p>
    <p>To represent locations as jurisdictions, the relation <code>hasJurisdiction</code> is provided. The concept <code>Law</code> represents an official or authoritative law or regulation created by a government or an authority. To indicate applicability of laws within a jurisdiction, the relation <code>hasApplicableLaw</code> is provided.</p>
    <p>The [[[LOC]]] extension provides taxonomies extending these concepts, such as to represent specific countries and regions, and the [[[LEGAL]]] extension further provides laws, authorities, memberships, adequacy decisions, and other 'legal' information associated with the locations as 'jurisdictions'.</p>
  </section>

  <section>
    <h3 id="context">Contextual Information</h3>
    <figure>
      <img src="../media/Context.png">
      <figcaption></figcaption>
    </figure>
    <blockquote>
      <p>see <a href="/dpv#vocab-context">processing and storage conditions section in DPV spec</a></p>
    </blockquote>
    <p>For indicating additional information regarding how the expressed information should be interpreted, or how it applies within a particular <i>context</i>, the <code>Context</code> concept along with the <code>hasContext</code></a> relationship can be used. <code>Context</code> refers to a generic collection of concepts that assist in indicating information such as the necessity, importance, environment - which aid in the interpretation or application of other core concepts.</p>

    <section>
        <h4>Importance and Necessity</h4>
        <p>DPV provides two subtypes of concepts to denote contextual <code>Importance</code> and <code>Necessity</code>, which can be applied to specific contexts such as <code>Process</code>, <code>Purpose</code>, <code>PersonalData</code>.</p>
        <p><code>Importance</code> is similar in application to <code>Necessity</code>, and provides a way to indicate how <i>central</i> or <i>significant</i> the indicated operation(s) are to the context (e.g. to the Controller). Subtypes of importance are <code>PrimaryImportance</code> to indicate 'main' or 'central' or 'primary' importance, and <code>SecondaryImportance</code> to indicate 'auxiliary' or 'peripheral' or 'secondary' importance.</p>
        <p><code>Necessity</code> enables specifying whether the contextual information is <code>Required</code>, is <code>Optional</code>, or is <code>NotRequired</code>. These can be used to indicate, for example, which parts of processing operations (e.g. purposes, personal data) are optional, and whether a particular processing operation is required to be carried out.</i></p>
        {{ example_aside('dex:E0026') }}
    </section>

    <section>
      <h4>Duration and Frequency</h4>
      <p>To express the duration of events or operations, such as how long processing will take or the validity of consent, the concept <code>Duration</code> can be used. Duration is indicated using the relation <code>hasDuration</code>, and has the following subtypes:</p>
      <ul>
      <li><code>TemporalDuration</code> - indicating a relative temporal duration, e.g. 6 months.</li>
      <li><code>UntilTimeDuration</code> - indicating duration that occurs until the end of specified time, e.g. until 31 DEC 2022.</li>
      <li><code>UntilEventDuration</code> - indicating duration that occurs until the end of specified event, e.g. until account is closed.</li>
      <li><code>FixedOccurrencesDuration</code> - a duration that is based on number of occurrences, e.g. until you view it 3 times</li>
      <li><code>EndlessDuration</code> - indicating a duration without an end condition or temporal notation.</li>
      </ul>
      <p><code>Frequency</code> indicates how frequently something occurs. Statistically, this can be expressed as the combination of number of occurrences and a time period, which can further be expressed as a probabilistic value or a percentage. For example, for something occurring once every year, the frequency is: 1 or 100% for 1 year. While such <i>quantified</i> representations are important for determining metrics and performing operations, DPV focuses on the <i>qualitative</i> labelling of such representations within a specific context.</p>
      <p>The relation <code>hasFrequency</code> associates a frequency with a context, and can be expressed using the following subtypes:</p>
      <ul>
        <li><code>ContinuousFrequency</code> - indicates things occurring continuously, e.g. location collection happens continuously.</li>
        <li><code>SporadicFrequency</code> - indicates things occurring sporadically or rarely or not often, e.g. collecting system usage logs every month.</li>
        <li><code>OftenFrequency</code> - indicates things happen often or regularly or commonly, e.g. online status is reported every 5 mins.</li>
        <li><code>SingularFrequency</code> - indicates things happen only once.</li>
      </ul>
    </section>
    <section>
      <h4>Scope and Justification</h4>
      <p><code>Scope</code>, associated using the relation <code>hasScope</code>, indicates the extent or range or boundaries associated with(in) a context. For example, where processing only takes place for a specific service or within a jurisdictional framework.</p>
      <p><code>Justification</code>, associated using <code>hasJustification</code>, is another generic concept representing the argument or justification or reason provided to explain or document information within the specific context. For example, where an audit was rejected the justification for this rejection can be associated. Or, if processing was decided to be continued despite an assessment showing high-risk criteria, the outcome can express a justification.</p>
    </section>
    <section>
      <h4>Data and Processing Scales</h4>
      <p><code>Scale</code>, associated using <code>hasScale</code>, refers to a measurement along some dimension. DPV provides (qualitative) scales for expressing <i>Data Volume</i>, <i>Data subjects</i>, and <i>Geographical Coverage</i> of processing. Along with these, DPV also provides a <i>Processing Scale</i> to express combinations of these. NOTE: The actual meaning or quantified amounts for each concept are not defined due to their interpretation based on contextual factors such as legislations, guidelines, domains, and variations across industries.</p>
      <p><code>DataVolume</code> refers to the volume or amount of data in the form of a scale with the following subtypes: <code>HugeDataVolume</code>, <code>LargeDataVolume</code>, <code>MediumDataVolume</code>, <code>SmallDataVolume</code>, <code>SporadicDataVolume</code>, <code>SingularDataVolume</code>, and is associated using <code>hasDataVolume</code>.</p>
      <p><code>DataSubjectScale</code> refers to the volume or amount of data subjects in the form of a scale with the following subtypes: <code>HugeScaleOfDataSubjects</code>, <code>LargeScaleOfDataSubjects</code>, <code>MediumScaleOfDataSubjects</code>, <code>SmallScaleOfDataSubjects</code>, <code>SporadicScaleOfDataSubjects</code>, <code>SingularScaleOfDataSubjects</code>, and is associated using <code>hasDataSubjectScale</code>.</p>
      <p><code>GeographicCoverage</code> refers to the volume or amount of geographical area covered by the processing in the form of a scale with the following subtypes: <code>GlobalScale</code>, <code>NearlyGlobalScale</code>, <code>MultiNationalScale</code>, <code>NationalScale</code>, <code>RegionalScale</code>, <code>LocalityScale</code>, <code>LocalEnvironmentScale</code>, and is associated using <code>hasGeographicScale</code>.</p>
      <p><code>ProcessingScale</code>, also associated using <code>hasScale</code>, represents an interpretation of the other scales to express whether the combination entails a specific threshold for qualifying as 'large scale'. Specific subtypes defined for these are: <code>LargeScaleProcessing</code>, <code>MediumScaleProcessing</code>, <code>SmallScaleProcessing</code>.</p>
    </section>
        
    <section>
      <h4>Statuses</h4>
      <blockquote>
        <p>see <a href="/dpv#vocab-context-status">statuses section in DPV spec</a></p>
      </blockquote>
      <p>To assist with expressing the state or status associated with various activities, DPV provides the <code>Status</code> concept that can be associated contextually using the <code>hasStatus</code> relation. Specific subtypes are provided as <code>ActivityStatus</code>, <code>ComplianceStatus</code> including <code>Lawfulness</code>, <code>AuditStatus</code>, <code>ConformanceStatus</code>, and <code>RequestStatus</code>.</p>

      <p><strong><code>ActivityStatus</code></strong> represents a state or status of an activity's operations and lifecycle, which includes <code>ActivityProposed</code>, <code>ActivityOngoing</code>, <code>ActivityHalted</code>, <code>ActivityCompleted</code>, and <code>ActivityNotCompleted</code>.</p>

      <p><strong><code>ComplianceStatus</code></strong> represents status associated with <i>compliance</i> with some norms, objectives, or requirements. Types include <code>Compliant</code>, <code>PartiallyCompliant</code>, <code>NonCompliant</code>, <code>ComplianceViolation</code>, <code>ComplianceUnknown</code>, <code>ComplianceIndeterminate</code>. The association with a law or objective can be specified using <code>hasApplicableLaw</code> or <code>hasPolicy</code> directly for the status or indirectly through the concept whose status is being represented.</p>

      <p><strong><code>Lawfulness</code></strong> represents a special type of <code>ComplianceStatus</code> which relates to legal compliance, or <i>lawfulness</i>, and has types <code>Lawful</code>, <code>Unlawful</code>, and <code>LawfulnessUnkown</code>.</p>

      <p><strong><code>AuditStatus</code></strong> represents the state or status of an audit, where the term <i>audit</i> is loosely defined, and may or may not relate to legal compliance - for e.g. for impact assessments, or as part of certification, or organisational quality assurance processes. Types of audits include <code>AuditApproved</code>, <code>AuditConditionallyApproved</code>, <code>AuditRejected</code>, <code>AuditRequested</code>, <code>AuditNotRequired</code>, and <code>AuditRequired</code>.</p>

      <p><strong><code>ConformanceStatus</code></strong> represents the status of <i>conformance</i>, which is defined distinctly from <i>compliance</i> by considering voluntary association or following of a guideline, requirement, standard, or policy, and where compliance is related to the (legal or other systematically defined) <i>conformity</i> of a given system or use-case with <i>rules</i> which may dictate obligations and prohibitions that must be followed. To provide an illustrative example, consider <i>conformance</i> with a standard on best practices regarding security may assist in the demonstration of <i>compliance</i> with a legal norm requiring organisational measures of security. Types of conformance defined are: <code>Conformant</code> and <code>NonConformant</code>.</p>

      <p><strong><code>RequestStatus</code></strong> represents the state or status of <i>requests</i>, which can be between entities such as data subjects and controllers regarding exercising of rights, or between controllers and processors regarding processing operations, or between authorities and controllers regarding compliance related communications. Types of request statues are: <code>RequestInitiated</code>, <code>RequestAcknowledged</code>, <code>RequestAccepted</code>, <code>RequestRejected</code>, <code>RequestFulfilled</code>, <code>RequestUnfulfilled</code>, <code>RequestRequiresAction</code>, <code>RequestRequiredActionPerformed</code>, <code>RequestActionDelayed</code>, and <code>RequestStatusQuery</code>.</p>
    </section>

  </section>

  <section id="risk-assessment">
    <h3>Risk Assessment</h3>
    <blockquote>
      <p>see <a href="/dpv#vocab-risk">risk assessment section in DPV spec</a></p>
    </blockquote>
    <figure>
      <img src="../media/risk.png">
      <figcaption></figcaption>
    </figure>
    <p>For risk management, DPV's provides a lightweight risk ontology based on commonly utilised concepts regarding risk mitigation and risk management. While these concepts permit rudimentary association of risks and mitigations within a use-case, it is important to note that DPV (currently)
    does not provide comprehensive concepts for risk management.</p>
    <p>For more developed representations of risk assessment, mitigation, and management vocabularies, we suggest the adoption of relevant standards, such as the ISO/IEC 31000 series, and the use of [[[RISK]]] which further expands on the DPV risk assessment concepts to define incidents, data breaches, their associate reports and notices, risk matrices, and other risk management concepts.</p>
    <section>
      <h4>Risk and Mitigation</h4>
      <p>The central concepts within DPV's risk management vocabulary are <code>Risk</code> (associated using <code>hasRisk</code>) and its mitigation through <code>RiskMitigationMeasure</code> (associated using <code>mitigatesRisk</code> and conversely <code>isMitigatedByRisk</code>). Through these, risk can be associated with specific concepts (e.g. data categories) or contexts (e.g. process).</p>
      <p>To express quantified and qualified attributes associated with risk, such as levels and severity, DPV provides the following concepts: <code>RiskLevel</code> (associated using <code>hasRiskLevel</code>) to indicate the 'level' or 'magnitude' of risk; <code>Severity</code> (associated using <code>hasSeverity</code>) to indicate the magnitude of being unwanted or causing unwanted impacts, and <code>Likelihood</code> (associated using <code>hasLikelihood</code>) to indicate the probability of it taking place.</p>
      <p>To express remaining risk after mitigation, the concept <code>ResidualRisk</code> (associated using <code>hasResidualRisk</code> and conversely <code>isResidualRiskOf</code>) is provided. To represent the management of risk and the procedures and methods associated with it, the concept <code>RiskManagementProcess</code> is defined as part of the Technical and Organisational Measures.</p>
    </section>

    <section>
      <h4>Consequences and Impacts</h4>
      <figure>
        <img src="../media/Consequences.png">
        <figcaption></figcaption>
      </figure>
      <p>To represent the consequences and impacts of a risk event taking place, DPV provides the following concepts: <code>Consequence</code> arising from the context (e.g. data breach or unauthorised access to data) and the <code>Impact</code> caused  (e.g. identity theft).</p>
      <p>Consequences are associated using <code>hasConsequence</code>, and subtyped to indicate whether the consequence was due to the event successfully taking place (<code>ConsequenceOfSuccess</code>) or due to its failure in successfully completing or not taking place (<code>ConsequenceOfFailure</code>) or as side-effects (<code>ConsequenceAsSideEffect</code>).</p>
      <p>Impacts are associated using <code>hasImpact</code>, with the specific entity being impacted indicated using <code>hasImpactOn</code>. Impacts are subtyped to represent: <code>Benefit</code>, <code>Detriment</code>, <code>Damage</code> (<code>MaterialDamage</code>, <code>NonMaterialDamage</code>), and <code>Harm</code></p>.
      <p>
    </section>

    {{ example_aside('dex:E0027') }}
      
  </section>

  <section id="exercising-rights">
    <h4>Rights and Rights Exercise</h4>
    <figure>
      <img src="../media/rights.png">
      <figcaption></figcaption>
    </figure>
    <p>The concept <code>Right</code> represents a normative concept for what is permissible or necessary in accordance with a system such as laws. To associate rights with concepts that are relevant or within which those rights occur, the relation <code>hasRight</code> is used. Rights can be <i>passive</i>, which means they are always applicable without requiring anything to be done, or <i>active</i> where they require some action to be taken to initiate or exercise them. To represent these concepts, DPV uses <code>PassiveRight</code> and <code>ActiveRight</code> respectively. Rights can be applicable to different contexts or entities. To differentiate rights applicable or afforded to data subjects, the concept <code>DataSubjectRight</code> is used.</p>
    <p>The information regarding hwo to exercise a right is provided through <code>RightExerciseNotice</code> and associated using the <code>isExercisedAt</code> relation. This information can specify contextual information through use of other concepts such as <code>Process</code> to denote a <i>necessary</i> <code>Purpose</code> of <code>IdentityVerification</code> as part of the rights exercise.</p>
    <p>A <code>RightExerciseActivity</code> represents a concrete instance of a right being exercised. It can include contextual information such as timestamps, durations, entities, etc. that can be part of record-keeping. An activity can be a single <i>step</i> related to rights exercise -- such as the initial request to exercise that right, or its acknowledgement, or the final step taken to fulfil the right (e.g. provide some information), or it can also be a single activity describing the entire rights exercise process(es). To collate related activities associated with a rights exercise (e.g. associated with a specific data subject or a specific request), the concept <code>RightExerciseRecord</code> is useful. The information provided to describe or in fulfilment of a right exercise is represented by <code>RightFulfilmentNotice</code> and that associated when a right exercise cannot be fulfilled is represented by <code>RightNonFulfilmentNotice</code>.</p>
    <p>To indicate contextual information about Right Exercise activities, DPV suggests reuse of existing relations, such as those from DPV itself and [[[DCT]]]. For example, <code>dct:accessRights</code> can be used to specify constraints or requirements regarding access (e.g. log in required), or <code>dct:hasPart</code> and <code>dct:isPartOf</code> to express records and its contents, <code>dct:valid</code> to express validity constraints on the exercising being made available, <code>foaf:page</code> to specify the location or provision of notice, and <code>hasStatus</code> to represent the status of an activity.</p>
    <p>When rights require the provision of information which beyond a static common notice, for example a document personalised to the individual's information, or a dataset containing the individual's data, DPV recommends using [[[DCAT]]] to model the contents as a <code>dcat:Resource</code> or other relevant concepts from [[DCAT]] and [[DCT]] such as <code>dct:format</code>, <code>dct:accessRights</code>, and <code>dct:valid</code>.</p>
  </section>

  <section id="rules">
    <h4>Rules</h4>
    <p>DPV provides the concept <code>Rule</code> to specify requirements, constraints, and other forms of 'rules' that are associated with specific contexts (e.g., processing activities) using the relation <code>hasRule</code>. DPV provides three forms of Rules to represent <code>Permission</code>, <code>Prohibition</code> and <code>Obligation</code>, and their corresponding relations <code>hasPermission</code>, <code>hasProhibition</code> and <code>hasObligation</code>, to indicate a Rule that specifies whether something is permitted, prohibited or an obligation, respectively. DPV does not define additional semantics for rules and limits its scope and focus to provide a simple way to specify permissions, prohibitions, and obligations as common rules associated with personal data and its processing activities. For a more extensive and richer set of semantics and concepts to represent rules, DPVCG suggests looking towards other languages, such as [[ODRL]], [[SHACL]], and [[RuleML]] that have been developed with the specific goal of representing and applying rules. We welcome contributions for aligning DPV with these, and for providing guidance on how to complement DPV's rule-based concepts with external languages.</p>
    <p>In representing Rules, DPV only provides the concept and does not express any inherent semantics on what those rules mean in relation to each other. For example, DPV does not express Permission to be non-compatible or disjoint from Prohibition. This is to separate the interpretation and application of rules based on the necessities of a use-case. For example, in a legal investigation it may be prudent to specify permission and prohibition can never occur together, but this may not be true if there are different legal requirements that allow a prohibition to be resolved or deferred, such as through another permission that overrides the prohibition.</p>
    <p>DPV does not specify 'default' in relation to rules, i.e. it does not provide an interpretation of whether some rules apply automatically unless otherwise declared. For example, in declaring an instance of Process, the assumption is that the activities are modelled for what is happening or what is intended/planned to happen. The explicit annotation using a Permission rule adds information about whether some activity is permitted (and its associated information). Instead, if the use-case is using DPV to only document activities that are permitted, there is no need to explicitly specify the permissions. Similarly, just because something is happening or planned to happen, it cannot be assumed to be permitted (e.g., from evaluation of legal requirements). </p>
    <p>To associate a rule with a specific context, which can be a Process or PersonalData or Purposes, the relations <code>hasPermission</code>, <code>hasProhibition</code> and <code>hasObligation</code> are provided. Additional types of rules can be added to DPV by extending the Rule Concept (e.g., <code>:MyRule rdfs:isSubClassOf dpv:Rule</code>).</p>
    {{ example_aside('dex:E0028') }}
    {{ example_aside('dex:E0029') }}
    {{ example_aside('dex:E0030') }}
  </section>

</section>

<section id="extensions">
  <h2>Extensions</h2>
  <p>To supplement the concepts and taxonomies in [[DPV]] for specific applications, use-cases, or to provide separation for better management of terms, we provide several extensions to the DPV.</p>
  <section id="extension-pd">
    <h3>Personal Data (PD)</h3>
      <p>[[[PD]]] provides additional concepts that extend the DPV's personal data taxonomy based on an opinionated structure contributed by R. Jason Cronk from <a href="https://enterprivacy.com/">EnterPrivacy</a>. This separation is to enable adopters to decide whether the extension's concepts are useful to them, or to use other external vocabularies, or define their own.</p>
      <p>Concepts within [[PD]] are broadly structured in top-down fashion by utilising their relevance and origin as:</p>
      <ul>
        <li>Internal (within the person): e.g. Preferences, Knowledge, Beliefs</li>
        <li>External (visible to others): e.g. Behavioural, Demographics, Physical, Sexual, Identifying</li>
        <li>Household: e.g. personal or household activities</li>
        <li>Social: e.g. Family, Friends, Professional, Public Life, Communication</li>
        <li>Financial: e.g. Transactional, Ownership, Financial Account</li>
        <li>Tracking: e.g. Location, Device based, Contact</li>
        <li>Historical: e.g. Life History</li>
      </ul>
  </section>

  <section id="extension-loc">
    <h3>Locations (LOC)</h3>
    <p>[[[LOC]]] provides additional concepts regarding locations such as countries and regions based on the ISO 3166 standards. It enables representing information such as processing takes place within Ireland, represented by <code>loc:IE</code>, or within European Union (EU) by using <code>loc:EU</code>. We are working on expanding this list to also specify regions, cities, and other pertinent location details, and welcome participation and contributions for this.</p>
  </section>

  <section id="extension-risk">
    <h3>Risk Management (RISK)</h3>
    <p>[[[RISK]]] builds on top of the lightweight risk framework within DPV by providing the following extensive concepts related to risk assessment and management. We are in the process of identifying additional concepts and taxonomies for the risk extension, such as for risk management procedures and the creation of a risk ontology based on ISO standards.</p>
    <ul>
      <li><strong>Risk Controls</strong> - categories of measures such as those related to risk source, likelihood, consequence, vulnerability, as well as the intended effect in terms of monitoring, controlling, halting, removing, or reducing.</li>
      <li><strong>Consequences and Impacts</strong> - list of consequences such as data breaches, costs, identity theft and several others that are categorised based on DPV's impact framework i.e. damage, harm, or detriment.</li>
      <li><strong>Scale for Risk Levels, Severity, and Likelihood</strong> - a 7 point qualitative scale to express concepts associated with levels, severity, and likelihood of risk and its consequences.</li>
      <li><strong>Risk Matrix</strong> - an encoded form of risk matrices based on combinations of severity and likelihood along with the resulting risk level. Risk matrix nodes and values are provided for dimensions 3x3, 5x5, and 7x7.</li>
      <li><strong>Incidents, Reports, and Notices</strong> - specifying incidents such as security incidents or data breaches, documenting information about them, and notices used to communicate with other relevant entities such as authorities and data subjects.</li>
      <li><strong>Risk Management</strong> - risk management concepts based on ISO 31000 series.</li>
    </ul>
  </section>

  <section id="extension-tech">
    <h3>Technologies (TECH)</h3>
    <p>[[[TECH]]] extends the DPV's terms to represent further specific details regarding technologies, their management, and relevance to actual real-world tools and systems. It provides concepts for the following:</p>
    <ul>
      <li><strong>Provision method</strong>: System, Component, Algorithm, Service, Goods, Product, Subscription, Fixed Use</li>
      <li><strong>Communication method</strong>: WiFi, Bluetooth, GPS, Cellular Network</li>
      <li><strong>Actors</strong>: Developer, Provider, User, Subject, etc.</li>
      <li><strong>Intended Use</strong>: what the technology was/is intended to be used for</li>
      <li><strong>Documentation</strong>: technical and user manuals and other documentation</li>
      <li><strong>Status</strong>: whether the technology has been released, has been provided, and other statuses</li>
      <li><strong>Tools</strong>: databases, cookies, etc.</li>
    </ul>
    <p>The intention and aim of developing the TECH extension is to describe real-world tools and services, such as a specific cloud storage provider, and provide categorisation and metadata to connect it to DPV's concepts, such as to indicate the cloud storage instance features encryption at rest as a technical measure. Through these, the management and documentation of use-cases can be made easier by providing the relationships between tools/services and technical measures as a 'knowledge graph'.</p>
  </section>

  <section id="extension-ai">
    <h3>Artificial Intelligence (AI)</h3>
    <p>[[[AI]]] is an extension under development which will further extend the [[TECH]] extension to represent concepts associated with AI. These will include representation of:</p>
    <ul>
      <li><strong>Techniques</strong> such as machine learning and natural language programming</li>
      <li><strong>Capabilities</strong> such as image recognition and text generation</li>
      <li><strong>Lifecycle</strong> such as data collection, training, fine-tuning, etc.</li>
      <li><strong>Risks</strong> such as data poisoning, statistical noise and bias, etc.</li>
      <li><strong>Risk Measures</strong> to address the AI specific risks</li>
      <li><strong>Documentation</strong> such as Data Sheets and Model Cards</li>
      <li><strong>Actors</strong> such as AI Developer and AI Deployer</li>
      <li><strong>Status</strong> associated with AI development</li>
    </ul>
  </section>

  <section id="extension-justifications">
    <h3>Justifications</h3>
    <p>[[[JUSTIFICATIONS]]] provides concepts for use as 'justifications' with DPV. For example, where a right cannot be fulfilled, a justification such as 'identity could not be verified' is represented using a specific concept.</p>
  </section>

  <section id="extension-legal">
    <h3>Legal Concepts (LEGAL)</h3>
    <p>[[[LEGAL]]] provides concepts to represent laws, authorities, and other legal concepts in various jurisdictions. It is structured to create a separate namespace for each country or jurisdiction by using the ISO 3166-2 code, for example <code>IE</code> represents Ireland and <code>EU</code> represents the European Union. Within this namespace, the specific laws and authorities for that jurisdiction are defined.</p>
    <p>At the moment, the following jurisdictions are defined:</p>
    <ul>
      <li>[[[LEGAL-DE]]]</li>
      <li>[[[LEGAL-EU]]]</li>
      <li>[[[LEGAL-GB]]]</li>
      <li>[[[LEGAL-IE]]]</li>
      <li>[[[LEGAL-IN]]]</li>
      <li>[[[LEGAL-US]]]</li>
    </ul>
    <p>At the moment, the following EU laws are defined:</p>
    <section id="extension-eu-gdpr">
      <h4>EU GDPR</h4>
      <p>While several of DPV's concepts are inspired from the GDPR, the use of DPV itself does not point towards specific concepts from GDPR such as legal bases in Article.6. This is to enable use of DPV with different jurisdictional and domain terminologies through the use of extensions. [[[EU-GDPR]]] provides an extension of DPV's concepts for the [[GDPR]] for the following non-exhaustive list of concepts:</p>
      <ul>
        <li><strong>Legal Bases (Art.6)</strong> - DPV's legal bases are extended to represent specific clauses from GDPR Art.6 (e.g. A.6-1a consent).</li>
        <li><strong>Legal Bases (Art.9)</strong> - DPV's legal bases are extended to represent specific clauses from GDPR Art.9 (e.g. A.9-2a explicit consent).</li>
        <li><strong>Legal Bases (Data Transfers)</strong> - DPV's <code>DataTransferLegalBasis</code> is extended to represent GDPR's Articles 45, 46, and 49.</li>
        <li><strong>Data Transfer Tools</strong> - Mechanisms defined by the GDPR for data transfers, e.g. contractual clauses.</li>
        <li><strong>DPIA</strong> - Statuses for representing DPIA related procedures and outcomes, e.g. necessity, high-risk, and consultation required.</li>
      </ul>
    </section>
    <section id="extension-eu-dga">
      <h4>EU DGA</h4>
      <p>The [[[EU-DGA]]] extension provides concepts for the [[[DGA]]].</p>
    </section>
    <section id="extension-eu-aiact">
      <h4>EU AI Act</h4>
      <p>The [[[EU-AIAct]]] extension provides concepts for the [[[AIAct]]].</p>
    </section>
    <section id="extension-eu-nis2">
      <h4>EU NIS2</h4>
      <p>The [[[EU-NIS2]]] extension provides concepts for the [[[NIS2]]].</p>
    </section>
  </section>

  <section id="working-notes" class="notoc">
    <h3>Notes</h3>
    <p>This document is based on inspiration from the following:</p>
    <ul>
      <li>
        <p>RDF 1.1 Primer <a href="https://www.w3.org/TR/rdf11-primer/"><u>https://www.w3.org/TR/rdf11-primer/</u></a></p>
      </li>
      <li>
        <p>OWL 2 Primer <a href="https://www.w3.org/TR/owl2-primer/"><u>https://www.w3.org/TR/owl2-primer/</u></a></p>
      </li>
      <li>
        <p>PROV Model Primer <a href="https://www.w3.org/TR/prov-primer/"><u>https://www.w3.org/TR/prov-primer/</u></a></p>
      </li>
    </ul>
  </section>
  
  {% block ACKNOWLEDGEMENTS %}
<section id="funding-acknowledgements" class="notoc">
  <h2>Funding Acknowledgements</h2>

  <h3>Funding Sponsors</h3>
  {{ funding_acknowledgements() }}

  <h3>Funding Acknowledgements for Contributors</h3>
  <p>The contributions of Beatriz Esteves have received funding through the <a href="https://protect-network.eu/">PROTECT ITN Project</a> from the European Union’s Horizon 2020 research and innovation programme under the Marie Skłodowska-Curie grant agreement No 813497.</p>
  <p>The contributions of Harshvardhan J. Pandit have been made with the financial support of Science Foundation Ireland under Grant Agreement No. 13/RC/2106_P2 at the ADAPT SFI Research Centre.</p>

</section>
{% endblock ACKNOWLEDGEMENTS %}
  <script type="text/javascript" src="../media/common.js" defer></script>
</body>
</html>
